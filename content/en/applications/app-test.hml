
<!DOCTYPE html>
<html>

  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OAuth 2.0 debugger</title>
    
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
<meta name="theme-color" content="#ffffff">


    <meta name="description" content="Test and debug OAuth 2.0 requests. This free tool makes it easy to send requests and view responses." />
    <meta property="og:type" content="website" />
    <meta property="og:description" content="Test and debug OAuth 2.0 requests. This free tool makes it easy to send requests and view responses." />
    <meta property="og:title" content="OAuth 2.0 debugger" />
    <meta property="og:image" content="https://oauthdebugger.com/images/gear-sm.png" />
    <meta property="og:url" content="https://oauthdebugger.com/" />

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700" type="text/css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.3.2/css/mdb.min.css" integrity="sha256-HSciL+lazQcMW++cz2zjsrvhGmQk1mh2nzXl/kqTSjY=" crossorigin="anonymous" />
    
    
    
      <link rel="stylesheet" href="/css/site.css?v=io9rW455BJDCex80V1k4X42P4XDZ5vIy5jjGXk0lvoM" />
    
    
    
      <script async src="https://www.googletagmanager.com/gtag/js?id=UA-106432346-2"></script>
      <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments)};
        gtag('js', new Date());

        gtag('config', 'UA-106432346-2');
      </script>

    
    <script>
      window.tenant = 'oauth';
    </script>
  <script type="text/javascript">
	
    var appInsights=window.appInsights||function(a){
        function b(a){c[a]=function(){var b=arguments;c.queue.push(function(){c[a].apply(c,b)})}}var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie=d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f="onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c
    }({
        instrumentationKey: 'aa630223-7cf1-44c9-937b-6a86fbf109f8'
    });

    window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView();
	
    </script></head>

  <body>

    <header class="debug__header header-oauth">
      <div class="debug__header-content">
        <h1>
          <strong>OAuth 2.0</strong> &lt;debugger/&gt;
        </h1>
        <p>
          Test OAuth 2.0 requests and debug responses.
        </p>
        <span class="debug__author">
          <small>
            <a href="https://www.recaffeinate.co">
              <i class="fa fa-code"></i>
              Crafted by Nate Barbettini
            </a>
          </small>
        </span>
      </div>
    </header>

    <div>
      

<script language="javascript">
    window.serverInfo = {
        method: "POST",
        referer: "https://id.dev.olt-dev.io/v1/id/auth/realms/olt/login-actions/authenticate?client_id=d49014f7-4f2f-420c-ae2c-166a5709ee83&amp;tab_id=Qz3aoFBGC9E",
        formBody: [
{ name: 'code', value: 'eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..2xNxHjTNJLgvPwflznoxgQ.AZpZiZ8qYQ7LwuZA2VMrZB6km1Kf4RKvc8DjSeaxL6IcleMa9S-YhDDf3kOxOuvWfuFt3oXhLucju-opTlSr0E9W3pp-ZNNtLXUzjhwQfe6WCdb3lTHOPEtdq__l62falaqhT4S-tmO-EscQeICi4Usr3SxTopMZPj-K2qtZMizTNarvySi2eXAdVrGi2OS2sABMDkZWMfg2zSNtpQor3I1tXX7a0vOG2uwjzzH_2IBakyzMdxYCTR5Q1y4Hp0k4.FZNQ-D2G5EHXL9jgSoOqkQ' },{ name: 'session_state', value: 'fd28c39b-7341-4d9c-9df7-99d55e8582f5' }        ]
    }
</script>


<div id="debug-view">
  <div class="container debug__callback" id="debug-view-component"> 
      <h2 class="pull-right">
          <a href="/">
              <i class="fa fa-repeat" aria-hidden="true"></i>
              Start over
          </a>
      </h2>

      <div class="debug__callback-header" v-if="success">
          <h1 class="green-text">
              <i class="fa fa-check-circle" aria-hidden="true"></i>
              <b>Success!</b>
          </h1>

          <h2 class="h4-responsive">
              The flow was successful.
              <span v-if="flow === 'code'">
                  The authorization server responded with an authorization code because the flow was started with
                  the <code>code</code> response type.
              </span>
              <span v-if="flow === 'implicit'">
                  The authorization server responded with tokens because the flow was started with the
                  implicit {{savedResponseType ? '(' + savedResponseType + ')' : ''}} response type.
              </span>
          </h2>

          <h2 class="h4-responsive" v-show="state.exists">
              The returned state is <code>{{state.value}}</code>.
              <template v-if="expectedState">
                  <span class="green-text" v-show="state.value === expectedState">
                      <i class="fa fa-check-circle" aria-hidden="true"></i>
                      Matches the original state
                  </span>
                  <span class="orange-text" v-show="state.value !== expectedState">
                      <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>
                      Does not match the original state: <code>{{expectedState}}</code>
                  </span>
              </template>
          </h2>

          <code-card title="Authorization code" class="success"
                    v-show="flow === 'code'"
                    v-bind:value="code.value">
              {{code.value}}
          </code-card>

          <code-card title="Access token" class="success"
                    v-show="accessToken.exists"
                    v-bind:value="accessToken.value">
              {{accessToken.value}}
          </code-card>

          <code-card title="ID token" class="success"
                    v-show="idToken.exists"
                    v-bind:value="idToken.value">
              {{idToken.value}}
          </code-card>
      </div>

      <div class="debug__callback-header" v-if="!success">
          <h1 class="red-text">
              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>
              <b>Error</b>
          </h1>
          <h2 class="h4-responsive">
              The authorization server responded with an error. This could mean that the request parameters were incorrect, or that the user rejected the authorization.
          </h2>

          <code-card class="error"
                    v-bind:title="error.value ? 'Error: ' + error.value : 'Error'"
                    v-bind:value="errorDescription.value">
              {{safeUnescape(errorDescription.value) || '(no error description)'}}
          </code-card>
      </div>

      <div class="debug__callback-info" v-if="success && flow === 'code'">
          <h3 class="h5-responsive orange-text">Step 2: Exchange code for tokens</h3>
          <p>
              Now you need to exchange the authorization code for tokens using the token endpoint.
              We can't do this step for you because it involves your client secret.
          </p>

          <code-card class="next-step">
              <span class="code-line">POST <span v-bind:class="{ 'orange-text': !tokenEndpoint }">{{tokenEndpoint || '{tokenEndpoint}'}}</span></span>
              <span class="code-line">Content-Type: application/x-www-form-urlencoded</span>
              <span class="code-line">&nbsp;</span>
              <span id="token-request-body">
                  <span class="code-line">grant_type=authorization_code&amp;</span>
                  <span class="code-line">code=<span class="light-blue-text">{{code.value}}</span>&amp;</span>
                  <span class="code-line">client_id=<span v-bind:class="{ 'orange-text': !savedClientId, 'light-blue-text': savedClientId }">{{savedClientId || '{clientId}'}}</span>&amp;</span>
                  <span class="code-line">client_secret=<span class="orange-text">{clientSecret}</span>&amp;</span>
                  <span class="code-line">redirect_uri=<span v-bind:class="{ 'orange-text': !savedRedirectUri, 'light-blue-text': savedRedirectUri }">{{encodeURIComponent(savedRedirectUri) || '{redirectUri}'}}</span></span>
              </span>
          </code-card>
      </div>

      <div class="debug__callback-info">
          <h3 class="h5-responsive">{{method | upper}} request details</h3>

          <code-card title="Form body values"
                    v-show="formBody.length > 0"
                    v-bind:value="reconstructedForm">
              <template v-for="param in formBody">
                  <span class="code-line">{{param.name}}=<span class="light-blue-text">{{param.value}}</span></span>
              </template>
          </code-card>

          <code-card title="?query values"
                    v-show="query.length > 0"
                    v-bind:value="rawQuery">
              <template v-for="param in query">
                  <span class="code-line">{{param.name}}=<span class="light-blue-text">{{param.value}}</span></span>
              </template>
          </code-card>

          <code-card title="#fragment values"
                    v-show="fragment.length > 0"
                    v-bind:value="rawFragment">
              <template v-for="param in fragment">
                  <span class="code-line">{{param.name}}=<span class="light-blue-text">{{param.value}}</span></span>
              </template>
          </code-card>
      </div>
  </div>
</div>



    <script src="/bundle/debug.min.js?v=T73r6kPnha_37oN-yfqCFT-KeIQBnWZY57Az5KkOrVQ"></script>



      <footer class="debug__footer">
        <span>&copy; 2018 <a href="https://www.recaffeinate.co">Nate Barbettini</a></span>
      </footer>
    </div>    

    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <!-- Bootstrap tooltips -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
    <!-- Bootstrap core JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <!-- MDB core JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.3.2/js/mdb.min.js" integrity="sha256-2Buypeb0Pu614AJISY6JXTri4OLjsLyC69rI3ErnEKw=" crossorigin="anonymous"></script>
  </body>

</html>
