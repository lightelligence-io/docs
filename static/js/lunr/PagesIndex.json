[{"title":"LIGHTELLIGENCEÂ® User Journey","href":"/_index","body":" "},{"title":"Developing Custom Applications","href":"/applications/_index","body":"Design your OLT travel experience with custom applications Explore your IoT system landscapes and exploit its data resources As the tour guide of your end users develop custom applications to shape the lookout points and views on the data that your IoT system landscapes deliver With custom applications you access the OLT API endpoints httpsapilightelligenceiov1apicollection and manage them"},{"title":"Authenticating with OAuth2","href":"/applications/authenticating-with-Oauth2","body":"To be able to actually use applications perform two basic steps Register your applications to the OLT platform By registering your application to the OLT platform you turn your application into an OAuth2 client authenticating via OpenID Connect Implement OAuth2 in your application Restrictions For security reasons custom applications are not allowed to use API endpoints related to tenant management and user management For more information see Troubleshooting Application Management OAuth2 Background To authenticate users and background applications we use the OAuth2 protocol and OpenID Connect To access the OLT API an OAuth2 access token is required To retrieve an OAuth2 access token you need an OAuth2 client Without a registered application access to the OLT API is not possible For more information about the OAuth2 protocol and OpenID Connect see RFC 6749 The OAuth 20 Authorization Framework OpenID Authentication 20 Permissions We dont use the OAuth2 protocol to grant permissions to applications The application permissions are controlled by the user roles For more information see Managing Users You can implement custom permission in your applications assign them to custom user roles and use the OLT platform to verify the custom permissions For more information see Defining Custom Permissions and Roles"},{"title":"Creating an Initial Application","href":"/applications/creating-initial-application","body":"tbd Explain use case Procedure In the Developer Area choose Create application Sebastian Apply Title Case in UI elements Application with capital A lt figure srcimagesapplicationscreatinginitialapplicationpng captionCreating an Initial Application altCreating an Initial Application gt Specify the application data as required Name Sebastian what makes a meaningful name are there restrictions eg blank spaces and special characters Description Describe the applications use Link Sebastian what URL am I supposed to submit in what format What are the requirements eg To confirm choose Create Application lt figure srcimagesapplicationscreatinginitialapplicationdatapng captionSpecifying the Initial Application Data altSpecifying the Initial Application Data gt Result The application is created lt figure srcimagesapplicationscreatinginitialapplicationdisplayedpng captionDisplaying the Initial Application altSpecifying the Initial Application gt Sebastian what is it good for"},{"title":"Defining Custom Permissions and Roles","href":"/applications/defining-custom-permissions","body":"Custom permissions allow you to use the OLT role management to control how users can use your custom applications How you design and implement custom permissions in a custom application depends on your user role concept todo Example tbd Jewgeni give an example of what a customer wished to have custom permissionsroles for todo How it Works How does the custom roles mechanism work As an application developer implement in your custom application permissions that a user must have to perform a specific activity As an application developer create custom permissions corresponding to the permissions implemented in your custom application in the OLT portal As a tenant create custom roles based on the custom permissions As a tenant assign the custom roles to users Result When your custom application accesses the OLT platform it can query for custom user permissions based on the users role Developing custom roles and developing custom creations are processes that are mutually dependent You need an idea of user roles to be able to implement custom permissions in your custom applications accordingly You need to have implemented and installed the custom applications to be able to register the custom permissions and custom roles in the OLT platform Creating a Custom Permission Prerequisites As the application developer you have implemented custom permissions in your user application You have registered your custom application to the OLT platform For more information see Registering and Implementing User Applications Background applications dont have users Therefore you cant control them via custom permissionsroles Procedure Log on to the OLT portal as an application developer Under Developer Area obtain the authentication token Optional To identify the application ID make a GET request to the applicationdeveloperapplications endpoint To create a custom permission make a POST request to the applicationdeveloperapplicationsapplicationIdcustompermissions endpoint todo Lars endpoint not yet published yet tbd verify link todo Specify the following properties alias Enter for example the technical name of the custom permission implemented in your custom application category Describe for example the resource the custom permission is associated with name Enter a name description Describe the activity the custom permissions allows to perform curl curl X POST httpsapilightelligenceiov1applicationdeveloperapplicationsapplicationIdcustompermissions H Authorization Bearer authenticationToken H ContentType applicationjson d quotaliasquot quotsampleresourcereadquot quotcategoryquot quotSample resourcequot quotnamequot quotRead sample resourcequot quotdescriptionquot quotAllows to read the sample resourcequot 39 You get a response such as the following json quotdataquot quotidquot quot2429c9d18f5643a89813c3ae94853aafquot quotapplicationIdquot quot6f23aca99f53446587e1b580cf497cdaquot quotaliasquot quotsampleresourcereadquot quotnamequot quotRead sample resourcequot quotdescriptionquot quotAllows to read the sample resourcequot quotcategoryquot quotSample resourcequot quotcreatedAtquot quot20190527T122215681Zquot quotupdatedAtquot quot20190527T122215681Zquot Creating and Assigning a Custom Role As a tenant create a custom role and assign the custom application permissions Assign the role to users Prerequisites You have owner authorization You have installed an application with custom permissions Custom permissions of a custom application can only be assigned to custom roles if the custom application is installed Procedure Log on to the OLT portal as a user with owner authorization Under Developer Area obtain the authentication token Optional To identify the application ID of the custom application and to verify its installed make a GET request to the applications endpoint To only list installed applications use the corresponding search parameter applicationsinstalledtrue To identify the ID of the custom permissions associated with the application make a GET request to the applicationsapplicationIdcustompermissions endpoint todo Lars endpoint not yet published yet tbd verify link todo To create a role make a POST request to the roles endpoint Post the role name and a description of its use custom permission IDs In our example the device manager has write and read authorization In other use cases it might make sense to differentiate between roles that have readwrite authorization and readonly authorization only curl curl X POST httpsapilightelligenceiov1roles H 39ContentType applicationjson39 H 39Authorization Bearer authenticationToken39 d 39 quotnamequot quotDevice Managerquot quotdescriptionquot quotManages devices with write permissionquot quotcustomPermissionsquot quotidquot quot2429c9d18f5643a89813c3ae94853aafquot quotidquot quot9ecebed0804c11e9b4750800200c9a66quot You get a response such as the following containing the role ID json quotdataquot quotidquot quot8be5ebd5b8b34d2598ec4d42f45154c9quot quotnamequot quotDevice managerquot quotdisplayNamequot quotDevice Managerquot quotdescriptionquot quotManages devices with read and write permissionquot quotlockedquot false quotusersCountquot 0 quotcreatedAtquot quot20190528T120050289Zquot quotupdatedAtquot quot20190528T120050289Zquot quotpermissionIdsquot quotcustomPermissionIdsquot quot2429c9d18f5643a89813c3ae94853aafquot quot9ecebed0804c11e9b4750800200c9a66quot To identify the user IDs of user assigned to a tenant make a GET request to the tenantstenantIdusers endpoint To assign the custom role to a user make a PUT request to the tenantstenantIdusersuserIdroles endpoint curl curl X PUT httpsapilightelligenceiov1tenantstenantIdusersuserIdroles H 39ContentType applicationjson39 H 39Authorization Bearer authenticationToken39 d 39 quotidquot quot8be5ebd5b8b34d2598ec4d42f45154c9quot 39 Status 204 means the users roles are updated and the custom role is assigned lt figure srcimagesusersassigncustomrolepng captionAssigning a Custom Role altAssigning a Custom Role gt Optional Verify the roles assigned to users To list the roles assigned to a user make a GET request to the tenantstenantIdusersuserIdroles endpoint In our example you get the following response json quotmetaquot quotpagequot 0 quotpageSizequot 10 quotdataquot quotidquot quot8be5ebd5b8b34d2598ec4d42f45154c9quot quotnamequot quotDevice managerquot quotdisplayNamequot quotDevice Managerquot quotdescriptionquot quotManages devices with read and write permissionquot quotlockedquot false quotusersCountquot 1 quotcreatedAtquot quot20190528T120050289Zquot quotupdatedAtquot quot20190528T120050289Zquot quotpermissionIdsquot quotcustomPermissionIdsquot To list the users assigned to a role make a GET request to the rolesroleIdusers endpoint Maintaining Custom Permission Properties Changing the Category and Description As a tenant make a PATCH request to the rolesroleId endpoint Changing the Name or Alias Once a custom permission is created you cant change its name or alias This is to avoid any manipulation of a permission by the developer after it has been assigned by an application user To change name or alias do the following As an application developer create a new custom permission As a tenant to assign the newly created custom permission make a PATCH request to the rolesroleId endpoint As an application developer to delete the obsolete custom permission make a DELETE request to the applicationdeveloperapplicationsapplicationIdcustompermissionspermissionId endpoint todo Lars endpoint not yet published yet tbd verify link todo Status 204 means the custom permission has been deleted lt figure srcimagesusersassigncustomrolepng captionDeleting a Custom Permission altDeleting a Custom Permission gt Optional As an application developer to verify the custom permission has been deleted make a GET request to the applicationdeveloperapplicationsapplicationIdcustompermissions endpoint When you delete a custom application with custom permissions or a custom permission the custom permissions are removed from any role to which they were assigned"},{"title":"Drafts and notes to be deleted","href":"/applications/draft-notes","body":"The following open questions are in the following files The are indicated by lt todo 1 gt comments registeringuserapplicationsmd todo 10 replace httpsoauthdebuggercomdebug by OLT debuggger as soon as available in Q3 todo 20 Jewgeni So this will completely change Im not sure exactly how but hopefully they actually can create Applications through the UI soon So you should probably update the getting started guide you have to include some UI elements talk to teamrams Because the APIs for creating and managing APIs will not be used in the same way as default at least talk to Jewgeni here as well because hes driving the change registeringbackgroundapplicationsmd todo 10 in Jewgeni So this will completely change see todo 1 troubleshootingapplicationmanagementmd todo 10 add new feature when available new feature application permissions has nothing to do with custom roles to be implemented in 2019 Q3 will allow the customer to add permissions when ceating an app ie allow internal user management tenantusermanagementread in app Apps can set a list of permissions the user has to accept when they install the app This app needs access to your user data todo 20 check whether bug is fixed 20190517 Simon Nielsen 0934 Uhr A Yes that seem correct we have a ticket to look over the permissions for applications that we will do asap So assume you can access it and that it is correct Christoph Albrecht bearbeitet Simon to be able to do this I need the permission I want to verify I have Issue With the Oauth2 access token access is denied because the request requires usermanagement authorization xoltpermissions tenantusermanagementread I have the feeling Im in a circle to check my app permissions I need permissions that I dont have So in case access to an endpoint is denied I cant identify which endpoints I have permissions for managingapplicationsmd Timon what happens if an app is installed already Who gets which error message How will the respective tenant owner get informed about it tbd status mentioning it is not available to be used available false in its data The UI will show this in some nice UX to make sure the user know exactly what has happned to the installed application Talk more to Team Rams Timon Hass for information on the UX Public User App 0510 Verify role John Doe christophalbrechtposteode OWNER Register app quotnamequot quotPublic User App 0510quot quotwithPublicOauth2Clientquot true quotallowedTenantsquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotcommentquot quotExample Inc northern plantquot quotredirectUrisquot quothttpsoauthdebuggercomdebugquot quothttpsprodapplicationcomauthcallbackquot Response data id cd8f0ad6290a4feab3ba8df5e9ae88e9 name Public User App 0510 withPublicOauth2Client true oauth2Client id d49014f74f2f420cae2c166a5709ee83 secret YTaaCasWELOb6fqH type confidental publicOauth2Client id bb6ed503ad2e42f3b5d345f338ecea02 type public tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190510T090031376Z updatedAt 20190510T090031376Z redirectUris httpsoauthdebuggercomdebug httpsprodapplicationcomauthcallback allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190510T090031392Z installed false comment Example Inc northern plant install the application with a PUT request to the applicationsapplicationIdinstallation endpoint httpsapidevoltdeviov1applicationscd8f0ad6290a4feab3ba8df5e9ae88e9installation Response data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190510T090716801Z verify the app is installed httpsapidevoltdeviov1applications Response id cd8f0ad6290a4feab3ba8df5e9ae88e9 name Public User App 0510 available true availableCode APPAVAILABLE installation tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190510T090716801Z get the Oauth2 authorization code keyContentTypenameContentTypevalueapplicationxwwwformurlencodeddescriptiontypetext httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnectauth clientidd49014f74f2f420cae2c166a5709ee83 ampredirecturihttpsoauthdebuggercomdebug ampscopeopenid ampresponsetypecode ampresponsemodeformpost a Enter the following request in the browser address field oauth2Client d490 httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnectauthclientidd49014f74f2f420cae2c166a5709ee83ampredirecturihttpsoauthdebuggercomdebugampscopeopenidampresponsetypecodeampresponsemodeformpost public oauth2Client bb6 httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnectauthclientidbb6ed503ad2e42f3b5d345f338ecea02ampredirecturihttpsoauthdebuggercomdebugampscopeopenidampresponsetypecodeampresponsemodeformpost Result Hello John you are using the application Public User App 0510 On selecting the tenant I get the auth code eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0V5SWNAKSNY6yV9ZQTpcRwyc0j0veovN2XKMp4dUMvErDC43tKH1J1mvJdMZW53v6t3LCyJhaRSVXZhPISwO8HgR017oSNb7f91Uim1qbtXuJ3yrOrBzbKrENW0J78jnkOB1BrxumClQnsgF7DXnIEeYd7wy7ZwYxz9v6UHgOmciDrEaRQtxiSLYr66ahMNjQqznVde1gvHtfp9t7EbzaFlsx0sJHNbnnVpUbL0hvpNWNHvxjKiR8WTsidXpmVKv3OoYzOF4vLjgnVUlxPwMiMFyXSt57vtudaQ Get access token Put request in browser address field httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnecttokengranttypeauthorizationcodeampcodeeyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0V5SWNAKSNY6yV9ZQTpcRwyc0j0veovN2XKMp4dUMvErDC43tKH1J1mvJdMZW53v6t3LCyJhaRSVXZhPISwO8HgR017oSNb7f91Uim1qbtXuJ3yrOrBzbKrENW0J78jnkOB1BrxumClQnsgF7DXnIEeYd7wy7ZwYxz9v6UHgOmciDrEaRQtxiSLYr66ahMNjQqznVde1gvHtfp9t7EbzaFlsx0sJHNbnnVpUbL0hvpNWNHvxjKiR8WTsidXpmVKv3OoYzOF4vLjgnVUlxPwMiMFyXSt57vtudaQampclientidd49014f74f2f420cae2c166a5709ee83ampredirecturihttpsoauthdebuggercomdebug Result Lightelligence An internal server error has occurred The same query posted in Postman renders error invalidrequest errordescription Missing form parameter granttype Note grant type is defined in the query params as authorizationcode content type is defined in the Header as xwwwformurlencoded I have tried fifferent browsers So step 5 in your description The user takes this token and does a normal API call to idlightelligenceiotoken with the code as you defined in your example doesnt work for me Code flow confidential 0515 POST httpsapidevoltdeviov1applicationdeveloperapplications H Authorization Bearer authentication token H ContentType applicationjson d name My application name withPublicOauth2Client false allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 comment Example Inc northern plant redirectUris httpsoauthdebuggercomdebug httpsdevapplicationcomauthcallback httpsprodapplicationcomauthcallback resoponse data id d5e83d58c4c541d5973369aa97373b71 name code flow confidential 0515 withPublicOauth2Client false oauth2Client id eb1f394172274cbca572fb81196842b9 secret R0hE0hcCUrrkXJGu type confidental tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190515T104513710Z updatedAt 20190515T104513710Z redirectUris httpsoauthdebuggercomdebug httpsdevapplicationcomauthcallback httpsprodapplicationcomauthcallback allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190515T104513725Z installed false comment Example Inc northern plant Install the app PUT httpsapidevoltdeviov1applicationsd5e83d58c4c541d5973369aa97373b71installation H Authorization Bearer authentication token H ContentType applicationjson Response data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190515T105607306Z Get auth code httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnectauth clientideb1f394172274cbca572fb81196842b9 ampredirecturihttpsoauthdebuggercomdebug ampscopeopenid ampresponsetypecode ampresponsemodeformpost If I check token the response is Client is not allowed to initiate browser login with given responsetype Implicit flow is disabled for the client Client credentials 3rd try Simon I have repeated the whole process including verification steps At the end in step 7 below access with access token invariably fails while it works with authentication token As per step 1 I have owner permission As per step 2 I have the tenantusermanagementread permission required for the tenantstenantIdusersuserIdroles query identify user httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211users data quotidquot quot72fac0d5fe3245998f9ca033e42faaa9quot quotemailquot quotchristophalbrechtposteodequot quotfirstNamequot quotJohnquot quotlastNamequot quotDoequot quotuserRolesquot quotidquot quot3100bdf890d9471d86aef7ba9eff0a86quot quotnamequot quotownerquot quotdisplayNamequot quotOwnerquot quotdescriptionquot quotDefault owner role with full access to all resourcesquot quotlockedquot true meta quotpagequot 0 quotpageSizequot 10 quotitemsTotalquot 1 quotpagesTotalquot 1 Verify permissions httpsapidevoltdeviov1users72fac0d5fe3245998f9ca033e42faaa9permissions tbd attention is done with portal auth token do it with access token I have the tenantusermanagementread permission required for the tenantstenantIdusersuserIdroles query data permissions quotidquot quot6a6d57ac7cc74318a3494227d6f9edb5quot quotaliasquot quottenantusermanagementreadquot quotidquot quotf76aea85615344719f98d59a3657e259quot quotaliasquot quottenantusermanagementwritequot quotidquot quot1a4841224276452f86fe35328a269e0equot quotaliasquot quotapplicationsdevelopmentreadquot quotidquot quotc4d20bb140a94e239cebca970b6cd29dquot quotaliasquot quotapplicationsdevelopmentwritequot quotidquot quotb25a38ad86f9458d825a8c0234f146e7quot quotaliasquot quotapplicationsreadquot quotidquot quotd430282ca7a3416392f7b6055466d318quot quotaliasquot quotapplicationswritequot Register background app httpsapidevoltdeviov1applicationdeveloperapplications name Background Application 3 allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 Response data id 6b7dee714dbb4efe9c19b265300327e0 name Background Application 3 withPublicOauth2Client false oauth2Client id f45bffbf00b644bf99521e9e2a1f06ad secret ntkbqzlzLuqa6Fqk type confidental tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190509T153830152Z updatedAt 20190509T153830152Z allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190509T153830152Z installed false comment Install Background Application 3 PUT httpsapidevoltdeviov1applications6b7dee714dbb4efe9c19b265300327e0installation H Authorization Bearer authentication token H ContentType applicationjson Response data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190509T154802668Z Verify Background Application 3 is installed GET httpsapidevoltdeviov1applications meta page 0 pageSize 10 data id 2d8d676f9dac464bbf4894d1ff1b07ca name Background Application available true availableCode APPAVAILABLE installation tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190508T141103380Z id 6b7dee714dbb4efe9c19b265300327e0 name Background Application 3 available true availableCode APPAVAILABLE installation tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190509T154802668Z Get get the client credential flow OAuth2 access token POST httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnecttoken H ContentType applicationxwwwformurlencoded H tenant b1747579355d4b7aaa72c2336d3a7211 d granttypeclientcredentialsampclientidf45bffbf00b644bf99521e9e2a1f06adampclientsecretntkbqzlzLuqa6Fqk response accesstoken eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI3ZmYwM2QyMS0yOThiLTRjNTEtOTgwZC02Yjk1Y2Y3NjdmNmMiLCJleHAiOjE1NTgyODIzMjgsIm5iZiI6MCwiaWF0IjoxNTU3NDE4MzI4LCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsInN1YiI6ImI4MjY4MzA1LTk5MjQtNGRkMy1hNmE1LWUyNTFkODY4NzRiMiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImUyZWQyY2ViLTJmNDAtNGI2ZC04YTI4LWQyNjhlNTYzNWQ3MCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMiLCJjbGllbnRIb3N0IjoiMTAuMjQwLjAuOTciLCJjbGllbnRJZCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsImNsaWVudEFkZHJlc3MiOiIxMC4yNDAuMC45NyIsInRlbmFudCI6ImIxNzQ3NTc5LTM1NWQtNGI3YS1hYTcyLWMyMzM2ZDNhNzIxMSJ9v5HV3AQ2cQiGFcPb6pesi4Q3pRrD9M3kElbsiHuHzxLxNeP80sjHrlWO7hcTFuZgdFVCDCxIDezKnZN81CSNFf3X7srclvqnPuEHu9MbeIbisO93uzcdOVzUwDGC2cOtY4cG5CYCasPMY8FYp9LGEb0EsbMvd0MbNCFiJdYhz45GWMt1fKQEJfby91oyHNFACv0fM4NufWha6w0jSklhUsQBVZPAFOHlLcVDsZl4ypTcQPTZIHxpfKmXow0xjcORDbpCJMKNFEoSQBBEltXNWypZF44PmMV5Gy3j6FWmrMG7n1OIleS7AXFhJcvJiKl2p5tA0C5q4hfStzyxgdWg expiresin 864000 refreshexpiresin 950400 refreshtoken eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiIwOTcyMmExMy00YjYyLTQ3Y2MtYmY3ZC00MTk5YjM5NTBkZjYiLCJleHAiOjE1NTgzNjg3MjgsIm5iZiI6MCwiaWF0IjoxNTU3NDE4MzI4LCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsInN1YiI6ImI4MjY4MzA1LTk5MjQtNGRkMy1hNmE1LWUyNTFkODY4NzRiMiIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJmNDViZmZiZi0wMGI2LTQ0YmYtOTk1Mi0xZTllMmExZjA2YWQiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiJlMmVkMmNlYi0yZjQwLTRiNmQtOGEyOC1kMjY4ZTU2MzVkNzAiLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMifQuP2AceDJOiqua3BEsodkYhSn6vSJd59r11jjujzzbMv5cZsNI3YZhWSWJdGtr4lABnphH1Raw1PRFWENgaZpwISrG71MXEXkdp3wkhsigpg8ieJbg5CKz1pOpVZ5FLUP2RB9Q0tPe8Mz5HGiyJnMqXh0nq4euXDoRPxCgZG5FTxcr5i1zmM7D7Nq6GB6WCuo0ETtoh1ElT8oDCs54IOcir7Ts6hcePWib6EfZIbcCMRSeGcFwvKqIpo1rh94T2UEmoQLjhTP3ntimGk6MQEywHdRj0wnaqTAIjcXxJUkcGBWKZwbFMJntTbW3wWeTamTsZw6lIE5RQ tokentype bearer notbeforepolicy 0 sessionstate e2ed2ceb2f404b6d8a28d268e5635d70 scope oltapplications Fetch roles a with access token GET httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211roles H Authorization Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI3ZmYwM2QyMS0yOThiLTRjNTEtOTgwZC02Yjk1Y2Y3NjdmNmMiLCJleHAiOjE1NTgyODIzMjgsIm5iZiI6MCwiaWF0IjoxNTU3NDE4MzI4LCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsInN1YiI6ImI4MjY4MzA1LTk5MjQtNGRkMy1hNmE1LWUyNTFkODY4NzRiMiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImUyZWQyY2ViLTJmNDAtNGI2ZC04YTI4LWQyNjhlNTYzNWQ3MCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMiLCJjbGllbnRIb3N0IjoiMTAuMjQwLjAuOTciLCJjbGllbnRJZCI6ImY0NWJmZmJmLTAwYjYtNDRiZi05OTUyLTFlOWUyYTFmMDZhZCIsImNsaWVudEFkZHJlc3MiOiIxMC4yNDAuMC45NyIsInRlbmFudCI6ImIxNzQ3NTc5LTM1NWQtNGI3YS1hYTcyLWMyMzM2ZDNhNzIxMSJ9v5HV3AQ2cQiGFcPb6pesi4Q3pRrD9M3kElbsiHuHzxLxNeP80sjHrlWO7hcTFuZgdFVCDCxIDezKnZN81CSNFf3X7srclvqnPuEHu9MbeIbisO93uzcdOVzUwDGC2cOtY4cG5CYCasPMY8FYp9LGEb0EsbMvd0MbNCFiJdYhz45GWMt1fKQEJfby91oyHNFACv0fM4NufWha6w0jSklhUsQBVZPAFOHlLcVDsZl4ypTcQPTZIHxpfKmXow0xjcORDbpCJMKNFEoSQBBEltXNWypZF44PmMV5Gy3j6FWmrMG7n1OIleS7AXFhJcvJiKl2p5tA0C5q4hfStzyxgdWg H ContentType applicationjson response errorMessage Access to resource is forbidden errorCode NOACCESSTORESOURCE b The same request with auth token works meta page 0 pageSize 10 data id 2f62f7330b4f461daeaf3485b205a880 name writer displayName Writer description Default writer role including read and write access to every resource except the tenant itself and the tenants user management createdAt 20190319T142139392Z updatedAt 20190319T142139392Z id 3100bdf890d9471d86aef7ba9eff0a86 name owner displayName Owner description Default owner role with full access to all resources createdAt 20190319T142139392Z updatedAt 20190319T142139392Z id a51ea36ff83d4f86bab1a2bb00965401 name reader displayName Reader description Default reader role including read access to every resource except the tenants user management createdAt 20190319T142139392Z updatedAt 20190319T142139392Z Confluence httpslightelligenceatlassiannetwikispacesOCPpages887291905ApplicationManagementWhatisit OAuth Debug Register httpsoauthdebuggercomdebug quotnamequot quotOAuth Debug applicationquot quotwithPublicOauth2Clientquot false quotallowedTenantsquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotcommentquot quotExample Inc northern plantquot quotredirectUrisquot quothttpsoauthdebuggercomdebugquot quothttpsprodapplicationcomauthcallbackquot Result data id 74500c6c9bfd4f2eaef3e0d76c1bc3a7 name OAuth Debug application withPublicOauth2Client false oauth2Client id 7fae27ed2a78400c9cef5848b045d85c secret DsdPjKe2zR4ZEdTp type confidental tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190509T062049214Z updatedAt 20190509T062049214Z redirectUris httpsoauthdebuggercomdebug httpsprodapplicationcomauthcallback allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190509T062049214Z installed false comment Example Inc northern plant Install app Result data quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotcreatedAtquot quot20190509T062322777Zquot Get auth code httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnectauthclientid7fae27ed2a78400c9cef5848b045d85campredirecturihttpsoauthdebuggercomdebugampscopeopenidampresponsetypecodeampresponsemodeformpost Response sh ltscript languagequotjavascriptquotgt windowserverInfo method quotPOSTquot referer quothttpsiddevoltdeviov1idauthrealmsoltloginactionsauthenticateclientid7fae27ed2a78400c9cef5848b045d85campamptabid5s4YqHSknxcquot formBody name 39code39 value 39eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0QvmzuK2enM5rXgG26eWV9AfKpNH3ud44vFN1iVr5cbQntteOe0dAk2gJCTGeGNE5IwKk4CrLbC3c2MfPqsDbyoARo5t2kg4LLB39rGjSHzHqp3TIFWrCWMbO3dUIj3PYh7boO4TyKazkVWUzgrbUl4qZIYMm12fzjaWFHf4vj1uXkFV9YbZhtj04msujOac6iOmtlVGYMEuzTrdU0KqgCTkQ7V6iYBnyI4AocDDuNfTZYRVFGKbY9SsaZNG9PVZKQFMnzo8rpwxU0YlvWW7TLFn9LlEuFdxB6w39 name 39sessionstate39 value 39da6ee4696030495fa1ce7262a7b65ef939 ltscriptgtsh Get acces token httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnecttokengranttypeauthorizationcodeampcodeeyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In017D7A6KgpGkVqmBOTgEbCglBMhDEoZyiUSUx8gTVjb8h837rXrkFuTmoqD4B6dojG480NVYFpFPIxd2POo9diBM22Svqdw9vIV1DWbwow32ypoRzH9Tca0LYa9Sg8q7CWGdqt5DnOikYb0Siu6Ox8J3Ul2Gh1MsZDJAUVRhz6U65ixkpAJoZwJ2czJzr19YQnjCmM2fhpcbSOnbbljS1bmuVhtVcBec1jbWuHFbbfuXrjXYV9fR6W1DKKBbVs7eUVapl2gZCD3ef50rZ58d2WSpIpVN2f1UU2gampclientid7fae27ed2a78400c9cef5848b045d85campredirecturihttpsoauthdebuggercomdebugampclientsecretDsdPjKe2zR4ZEdTp eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In017D7A6KgpGkVqmBOTgEbCglBMhDEoZyiUSUx8gTVjb8h837rXrkFuTmoqD4B6dojG480NVYFpFPIxd2POo9diBM22Svqdw9vIV1DWbwow32ypoRzH9Tca0LYa9Sg8q7CWGdqt5DnOikYb0Siu6Ox8J3Ul2Gh1MsZDJAUVRhz6U65ixkpAJoZwJ2czJzr19YQnjCmM2fhpcbSOnbbljS1bmuVhtVcBec1jbWuHFbbfuXrjXYV9fR6W1DKKBbVs7eUVapl2gZCD3ef50rZ58d2WSpIpVN2f1UU2g Test Application data id 6f23aca99f53446587e1b580cf497cda name Test Application withPublicOauth2Client false oauth2Client id 6c6caadec6dc4759ac2e2169dd99b39d secret HXOyiBBeq88WQ4y type confidental tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190508T100557308Z updatedAt 20190508T100557308Z redirectUris httpsdevapplicationcomauthcallback httpsprodapplicationcomauthcallback allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190508T100557324Z installed false comment Example Inc northern plant httpsapidevoltdeviov1applications6f23aca99f53446587e1b580cf497cdainstallation data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190508T102720312Z Oauth2 authorization code httpsapidevoltdeviov1idauthrealmsoltprotocolopenidconnectauthclientid6c6caadec6dc4759ac2e2169dd99b39dampredirecturihttpsdevapplicationcomauthcallbackampscopeopenidampresponsetypecodeampresponsemodeformpost Registering an public app that has client secret data id b8fcaf339c604958ae1e5a55ea58ef74 name Public application withPublicOauth2Client true oauth2Client id 148e8aa9f71c4e7c9a1ea68de6357558 secret HMdXpVllVQpLlarh type confidental publicOauth2Client id 18b075df010e44ca8ad2081a80a969df type public tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190508T125518070Z updatedAt 20190508T125518070Z redirectUris httpsdevapplicationcomauthcallback httpsprodapplicationcomauthcallback allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190508T125518086Z installed false comment Example Inc northern plant installed data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190508T131203090Z httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnectauthclientid148e8aa9f71c4e7c9a1ea68de6357558ampredirecturihttpsdevapplicationcomauthcallbackampscopeopenidampresponsetypecodeampresponsemodeformpost clientidoauth2Clientid ampredirecturiredirectUri ampscopeopenid ampresponsetypecode ampresponsemodeformpost Client credentials app app2 data id e09eeb8e15744c56b49ddaa9f3e8c609 name Background Application 2 withPublicOauth2Client false oauth2Client id f622b664bc914f2dad4f538b038ae549 secret K3NGgpnQa4vLFNwr type confidental tenantId b1747579355d4b7aaa72c2336d3a7211 status active createdAt 20190509T105318619Z updatedAt 20190509T105318619Z allowedTenants tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190509T105318635Z installed false comment Install app curl X PUT httpsapidevoltdeviov1applicationse09eeb8e15744c56b49ddaa9f3e8c609installation H Authorization Bearer authentication token From app 2installed data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190509T110240591Z Get access token App 1 curl X POST httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnecttoken H ContentType applicationxwwwformurlencoded H tenant tenant ID d granttypeclientcredentialsampclientid28f83819199f4410ae7f722176512b93ampclientsecretIoSP8S78VRyrPZ2V response accesstoken eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiJjZDc5NGM5YS1jZGQzLTQ4ZTYtYmM5ZC01YmVkNGYzNzBlODIiLCJleHAiOjE1NTgyNjM5MjQsIm5iZiI6MCwiaWF0IjoxNTU3Mzk5OTI0LCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6ImY2MjJiNjY0LWJjOTEtNGYyZC1hZDRmLTUzOGIwMzhhZTU0OSIsInN1YiI6ImFmYjM4NWYyLTIyYmMtNDcwMS1hNmMzLTk0NjkxOTQ2ZDM4NiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImY2MjJiNjY0LWJjOTEtNGYyZC1hZDRmLTUzOGIwMzhhZTU0OSIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6Ijc3NjhiNzg4LTU1YjYtNDM0Ny04N2IwLTkyYmM3ZTVmNjM0ZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMiLCJjbGllbnRJZCI6ImY2MjJiNjY0LWJjOTEtNGYyZC1hZDRmLTUzOGIwMzhhZTU0OSIsImNsaWVudEhvc3QiOiIxMC4yNDAuMC4xMjgiLCJjbGllbnRBZGRyZXNzIjoiMTAuMjQwLjAuMTI4IiwidGVuYW50IjoiYjE3NDc1NzktMzU1ZC00YjdhLWFhNzItYzIzMzZkM2E3MjExIn0Fw8ZVnDTm6pZL8q9V3q86gk3oSG3ph6VwkzZo2iVbp21C4y8V7yc3raBpAmcUcZK8YfpN2Mzn1QiCMUavdPysSiCYpyF5UzEVNZJY7kIOUEg0PHZKsnQypOzipxtNHToD1YtososZdySyS12T7FhI7adgOI5jo0wxDkjxs8hbrZHJPFNrB9rHm6iGYcnirUgABbYt0vYzsvZULdM7Vkx9ihrkwcl7PFFojz9ESSiPi6eThrvRL5rmfuisqqI628dBwIuhjhmS7Of9oX28If16NNe9kdSBau3Yq5LA0sZbNN3GG7YxfmKcYSN9lsd2hJEI1eyv1zMLVxQ expiresin 864000 refreshexpiresin 950400 refreshtoken eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI3YjE4OTg5Mi04ZWViLTQyZTYtYTNhNy05MDI5ZjZhYWI2YzAiLCJleHAiOjE1NTgzNTAzMjQsIm5iZiI6MCwiaWF0IjoxNTU3Mzk5OTI0LCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6ImY2MjJiNjY0LWJjOTEtNGYyZC1hZDRmLTUzOGIwMzhhZTU0OSIsInN1YiI6ImFmYjM4NWYyLTIyYmMtNDcwMS1hNmMzLTk0NjkxOTQ2ZDM4NiIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJmNjIyYjY2NC1iYzkxLTRmMmQtYWQ0Zi01MzhiMDM4YWU1NDkiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiI3NzY4Yjc4OC01NWI2LTQzNDctODdiMC05MmJjN2U1ZjYzNGUiLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMifQDk0MtfG4CReilv6eEnhiOal5cyArYwvLzLOmazEvC1HZpHke0pAXEu7gWTOpVjHmBX8jaTIBEe9CukI4yOGezss7mZ2mp35G4gVKeK12YYSafMY7zsqxly4iylnplb2O4ZjV4TI5lomSXHlXU9g2szP1YnwwLN0RpzFL3rpqsuELglBPqo6RV99N3md4d9YiIEaEKeLOgIwWrQMJDDcdb3Ow5vSCT9GuYXUYEfA1gTvRUIeakf0hbD8DsTCxHIcUOx43FniLJu8Ly6vbBkO5uQcELo6rXxOHKIHDvRwrTpCdIh002pWwYfrg72vQZrs03K8Ol9fL8EIWxg tokentype bearer notbeforepolicy 0 sessionstate 7768b78855b6434787b092bc7e5f634e scope oltapplications App 2 curl X POST httpsiddevoltdeviov1idauthrealmsoltprotocolopenidconnecttoken H ContentType applicationxwwwformurlencoded H tenant tenant ID d granttypeclientcredentialsampclientid28f83819199f4410ae7f722176512b93ampclientsecretIoSP8S78VRyrPZ2V response accesstoken eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI4YzhlMDAxMi1lYWFiLTRkYzYtYmZiOC1iNTUyNTQ3YTJiMGEiLCJleHAiOjE1NTgyNjA2OTIsIm5iZiI6MCwiaWF0IjoxNTU3Mzk2NjkyLCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsInN1YiI6IjZmM2Q2MGQwLWJlMzAtNGNiYS1hOTU1LTczMDYzMDExNDg3YyIsInR5cCI6IkJlYXJlciIsImF6cCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjAwNjY4OGIxLTEzZjEtNGJhZi1hNzQxLTc4NTdmZmE5NjM2ZiIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMiLCJjbGllbnRJZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsImNsaWVudEhvc3QiOiIxMC4yNDAuMC42NiIsImNsaWVudEFkZHJlc3MiOiIxMC4yNDAuMC42NiIsInRlbmFudCI6ImIxNzQ3NTc5LTM1NWQtNGI3YS1hYTcyLWMyMzM2ZDNhNzIxMSJ9v7cu0zDJY0BqLSmTUauJW46XkGWOuNxVPV7qY4530FZU2BHwZuR5URPlJtHbWpe2QUqxSXboq4dPnL9PmCltUO11DT6cartsJAte4rvvJE2WHbYtmRasn8bPxZ9ZVFXIHQRDnIKDu0xPl29ijyqkWbTawdxvuLkwThi4GuapqWAjCX2pNBivmuT25QVBAFADcHuxRPgJ5DJ8BbFIOYRWjGRAO9v7RLjANSRjXLCS69WP6nKtZn0xJT0GXCUyyLeozI4FMWosq9UEFb2hIlXi4kJbkKpD6KsXq5RGEL7Ap812DUdTDzfA1IcqLH14S38PTnHCFwRssbx0g expiresin 863999 refreshexpiresin 950399 refreshtoken eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI4ZGMxYWQ3ZC04ZDg1LTQwZjUtOWNjZS05NWZhMGQwNzNlNDEiLCJleHAiOjE1NTgzNDcwOTIsIm5iZiI6MCwiaWF0IjoxNTU3Mzk2NjkzLCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsInN1YiI6IjZmM2Q2MGQwLWJlMzAtNGNiYS1hOTU1LTczMDYzMDExNDg3YyIsInR5cCI6IlJlZnJlc2giLCJhenAiOiIyOGY4MzgxOS0xOTlmLTQ0MTAtYWU3Zi03MjIxNzY1MTJiOTMiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiIwMDY2ODhiMS0xM2YxLTRiYWYtYTc0MS03ODU3ZmZhOTYzNmYiLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMifQHN0JYs0PchnO1yOiEt05ZLT0slpJgxuHjnAsR6bIPDMeBT0g95ejZvSHp5WsHOeNP8Iu3Z8JCBIEQnTjoSxUVycCtL13ujODsmrzzEFDz4807O4BqMcoTewxBxlCBSxXzn9mrRPPOQkWUnwxVLXy1tcgZns3X9DGtmfWNz7HBwzhjutk2fpY2GOMuENgjhhVLhYYYuhY1E74iCt9uK8XcQsWZKHHxMdNheJ4Us3E78sM9skSUUaa6dIN9dhSD51uB61qiA6zEX91j6FYwSnnLi6CnZMNcwT8ROhxKOyxN98JDRJCwTcPHFcAeFHlTYohRqFTHVnuwAg38Q tokentype bearer notbeforepolicy 0 sessionstate 006688b113f14bafa7417857ffa9636f scope oltapplications fetch some data curl X GET httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211roles H Authorization Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI4YzhlMDAxMi1lYWFiLTRkYzYtYmZiOC1iNTUyNTQ3YTJiMGEiLCJleHAiOjE1NTgyNjA2OTIsIm5iZiI6MCwiaWF0IjoxNTU3Mzk2NjkyLCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsInN1YiI6IjZmM2Q2MGQwLWJlMzAtNGNiYS1hOTU1LTczMDYzMDExNDg3YyIsInR5cCI6IkJlYXJlciIsImF6cCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjAwNjY4OGIxLTEzZjEtNGJhZi1hNzQxLTc4NTdmZmE5NjM2ZiIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMiLCJjbGllbnRJZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsImNsaWVudEhvc3QiOiIxMC4yNDAuMC42NiIsImNsaWVudEFkZHJlc3MiOiIxMC4yNDAuMC42NiIsInRlbmFudCI6ImIxNzQ3NTc5LTM1NWQtNGI3YS1hYTcyLWMyMzM2ZDNhNzIxMSJ9v7cu0zDJY0BqLSmTUauJW46XkGWOuNxVPV7qY4530FZU2BHwZuR5URPlJtHbWpe2QUqxSXboq4dPnL9PmCltUO11DT6cartsJAte4rvvJE2WHbYtmRasn8bPxZ9ZVFXIHQRDnIKDu0xPl29ijyqkWbTawdxvuLkwThi4GuapqWAjCX2pNBivmuT25QVBAFADcHuxRPgJ5DJ8BbFIOYRWjGRAO9v7RLjANSRjXLCS69WP6nKtZn0xJT0GXCUyyLeozI4FMWosq9UEFb2hIlXi4kJbkKpD6KsXq5RGEL7Ap812DUdTDzfA1IcqLH14S38PTnHCFwRssbx0g H ContentType applicationjson Result With the client credentials flow Im able to get the access token But when i try to get the roles for example curl X GET httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211roles H 39Authorization Bearer eyJhbGciOiJSUzI1NiIsInR 39 H 39ContentType applicationjson39 access is denied Display users with auth token httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211users result data id 72fac0d5fe3245998f9ca033e42faaa9 email christophalbrechtposteode firstName John lastName Doe userRoles id 3100bdf890d9471d86aef7ba9eff0a86 name owner displayName Owner description Default owner role with full access to all resources locked true meta page 0 pageSize 10 itemsTotal 1 pagesTotal 1 Display user with access token httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211users Access to resource is forbidden That seems not to be the solution Im making a different error When I display the tenants user with httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211users tenantusermanagementread with the authentication token from the portal my user is displayed as expected When I do the same with the access token for my app access is denied Also I have ensured in the portal that Im owner so I also should be able to fetch the roles correct But access is still denied quotdataquot quotidquot quot72fac0d5fe3245998f9ca033e42faaa9quot quotemailquot quotchristophalbrechtposteodequot quotfirstNamequot quotJohnquot quotlastNamequot quotDoequot quotuserRolesquot quotidquot quot3100bdf890d9471d86aef7ba9eff0a86quot quotnamequot quotownerquot quotdisplayNamequot quotOwnerquot quotdescriptionquot quotDefault owner role with full access to all resourcesquot quotlockedquot true quotmetaquot quotpagequot 0 quotpageSizequot 10 quotitemsTotalquot 1 quotpagesTotalquot 1 Display permissions for my user ID In the portal I have now ensured that Im owner Nevertheless Access to resource is forbidden So I tried the permissions endpoint httpsapidevoltdeviov1users6f3d60d0be304cbaa95573063011487cpermissions H Authorization Bearer eyJhbGciOiJSUzI1NiIsInR H ContentType applicationjson access is denied errorMessage User is not permitted to access this resource errorCode IDFORBIDDEN List installed tenants When I do httpsapidevoltdeviov1applicationinfoinstalledtenants with access token access is granted quotmetaquot quotpagequot 0 quotpageSizequot 10 quotdataquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotnamequot quotMusterTenantquot Get invites For example httpsapidevoltdeviov1tenantsb1747579355d4b7aaa72c2336d3a7211invites works with auth token but not access token What is it that I dont get tbd Simon I assume the Client Credentials flow is for our internal use only not for customers correct withPublicOauth2Clienttrue does not mean that we actually support 3 flow types the third being the implicit flow where the browser gets the access token directly from the server without first having to exchange the authorization code with the access token correct see httpsspeakerdeckcomnbarbettinioauthandopenidconnectinplainenglishslide38 and httpsspeakerdeckcomnbarbettinioauthandopenidconnectinplainenglishslide21 ErledigenLikegestern Simon Nielsen 1 Client credentials flow is fully supported for all our applications When youre building a background service that for example list all devices for all installed tenants youre not accessing the data as a user but rather as a client We have this specific endpoint that can be used only by clients to see all Installed Tenants which the service then can query to the API with httpsapilightelligenceiov1apicollectiontagapplicationinfopaths1applicationinfo1installedtenantsget No we dont support implicit flow due to recommendations from the OAuth2 board1 What it opens up is to use the Authorization Code Grant from a browser with a Public client without a secret less secure tbd Simon I have the impression the we have to add the step to get the Oauth2 authorization code that we then can exchange for the access token by redirecting the app to the URL of our OLT authorization server httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnectauth clientidoauth2Clientid ampredirecturiredirectUri ampscopeopenid ampresponsetypecode ampresponsemodeformpost How does the response with the auth code look like Yes that would be good to have in the public documentation but we should also recommend our users to use our JavaScriptSDK whenever that is available please talk to Jonathan Stoye about that Otherwise the callback is a formpost where in the body you can get the code For browsers you often use the query parameters and there it will also be the code parameter that you take The flow is explained more in the getting started guideApplication Management Getting Started Likevor 21 Minuten Simon Nielsen I use this tool for testing oauth flows httpsoauthdebuggercom works pretty good Application management for developers List the capabilities the applicatondeveloper endpoint provides Link to the applicationdeveloper endpoint in the OpenAPI docs OAuth 20 Client Types httptutorialsjenkovcomoauth2clienttypeshtml"},{"title":"Managing Custom Applications","tags":["deactivating applications"],"href":"/applications/managing-applications","body":"As the developer deactivate custom applications temporarily or whitelist additional tenants for example As a tenant owner install or uninstall custom applications for example Verifying Permissions To manage custom applications verify you have the permissions required for the specific endpoints Procedure To identify your user ID make a GET request to the tenantstenantIDusers endpoint You get user data such as the user ID in our example 72fa json quotdataquot quotidquot quot72fac0d5fe3245998f9ca033e42faaa9quot quotemailquot quotJohnDoeexamplecomquot quotfirstNamequot quotJohnquot quotlastNamequot quotDoequot quotuserRolesquot quotidquot quot3100bdf890d9471d86aef7ba9eff0a86quot quotnamequot quotownerquot quotdisplayNamequot quotOwnerquot quotdescriptionquot quotDefault owner role with full access to all resourcesquot quotlockedquot true To list your permissions make a GET request to the usersuserIdpermissions endpoint Result You get the users permissions for example the permissions related to application management json data permissions quotidquot quot1a4841224276452f86fe35328a269e0equot quotaliasquot quotapplicationsdevelopmentreadquot quotidquot quotc4d20bb140a94e239cebca970b6cd29dquot quotaliasquot quotapplicationsdevelopmentwritequot quotidquot quotb25a38ad86f9458d825a8c0234f146e7quot quotaliasquot quotapplicationsreadquot quotidquot quotd430282ca7a3416392f7b6055466d318quot quotaliasquot quotapplicationswritequot Managing Applications as a Developer We provide functions to manage custom applications you have developed Examples Deactivate an application temporarily or change application properties Allow tenants to install applications by registering an application to tenants whitelisting Changing Application Properties Change the following properties if required application name application type web application with confidential OAuth2 client or user agent application with public OAuth2 client redirect URLs teaser description to describe the application briefly URL to provide additional information about the application Procedure Make a PATCH request to the use the applicationdeveloperapplicationsapplicationId endpoint Deactivating an Application Temporarily To maintain a custom application deactivate it temporarily Do some fixes for example and ensure the application isnt being used during this time The user will see a message that the app is inactive and is asked to contact the developer for more information Procedure Make a PATCH request to the use the applicationdeveloperapplicationsapplicationId endpoint Set the status property to inactive Regenerating the OAuth2 Client Secret Regenerate the OAuth2 client secret in the following cases for example You have given the OAuth2 client secret out to someone that shouldnt have it For security reasons you want to make sure no possible attacker has access to your application data You have forgotten or lost the OAuth2 client secret when registering your application You can always generate a new OAuth2 client secret The new OAuth2 client secret invalidates any previous OAuth2 client secret For security reasons we dont allow for fetching OAuth2 client secrets already created Procedure Make a POST request to the applicationdeveloperapplicationsapplicationIdsecret endpoint Whitelisting Additional Tenants To install applications in additional tenants whitelist the tenants Control the tenants that are to use an application Background To be able to install an application in a tenant you must have whitelisted the tenant Procedure To whitelist a tenant make a PUT request to the applicationdeveloperapplicationsapplicationIdallowedtenantstenantId endpoint To control the tenants that are to use an application make requests to the following endpoints To list whitelisted tenants make a GET request to the applicationdeveloperapplicationsapplicationIdallowedtenants endpoint To revoke whitelisting for a tenant make a DELETE request to the applicationdeveloperapplicationsapplicationIdallowedtenantstenantId endpoint Deleting an Application Delete a custom application if its obsolete for example Procedure Identify the whitelisted tenants who might have installed the application Inform the tenant owners to uninstall the application To identify whitelisted tenants make a GETrequest to the applicationdeveloperapplicationsapplicationIdallowedtenants endpoint Note If you have a background application you can list the tenants that have actually installed your application See Listing Tenants Make a DELETE request to the applicationdeveloperapplicationsapplicationId endpoint Listing Tenants If you have a background application list all tenants which have currently installed the application and to whose data the application therefore has access to You get the tenant IDs and tenant names The endpoint only fetches uptodate data from the tenants that currently have installed your application Prerequisites Your custom application is a background application using client credentials For more information see Registering and Implementing Background Applications Procedure Make a GET request to the applicationinfoinstalledtenants endpoint Managing Applications as a Tenant Owner Install or uninstall custom applications Installing an Application Roll out custom applications to a tenant Prerequisites The custom application is whitelisted Procedure List all applications available whitelisted for a tenant Log on to the tenant Under Developer Area copy the authorization token Make a GET request to the applications endpoint To get only the applications not yet installed set the query parameter installed to false lt figure srcimagesapplicationslistappspng captionDisplaying Applications Available or Installed altDisplaying Applications Available or Installed gt You get the application name and application ID If the application property available is true the application can be installed json data quotidquot quot570e0a66974b40dd8108844da77719e9quot quotnamequot quotDisplay Motion Sensor Time Series Dataquot quotavailablequot true quotavailableCodequot quotAPPAVAILABLEquot quotinstallationquot quottenantIdquot quot570e0a66974b40dd8108844da77719e9quot quotcreatedAtquot quot20190428T231721Zquot Install an application Ensure that the application property available is true Only available whitelisted applications can be installed Ensure that your user has authorization as writer or owner Make a PUT request to the applicationsapplicationIdinstallation endpoint lt figure srcimagesapplicationsinstallapppng captionInstalling an Application altInstalling an Application gt Performing Miscellaneous Activities Uninstall a custom application no longer needed for example Procedure To verify the application properties make a GET request to the applicationsapplicationId endpoint whether an application is available to be installed in a tenant in which tenants an application is currently installed To uninstall an application make a DELETE request to the applicationsapplicationIdinstallation endpoint Note Your custom application implements custom permissions todo Lars check todo If you uninstall a custom application with custom permissions all role assignments of those custom permissions are removed If you reinstall the application you have to assign the custom permissions to the custom role again For more information about custom roles and permissions see Defining Custom Permissions and Roles "},{"title":"Registering and Implementing Background Applications","href":"/applications/registering-background-applications","body":"To turn a background application into an OAuth2 client register it to the OLT platform and implement OAuth2 in your application Prerequisites To register applications to the OLT platform you have owner or writer authorization Note Checking permissions If you use default roles to verify you have owner or writer authorization in the OLT portal under Users check your roles If you use custom roles verify the user permissions for the specific endpoints For more information see Defining Custom Roles Registering and Installing a Background Application From the OLT portal under Developer Area obtain the tenant ID and the authentication token of the tenant who is to own the application For more information see the analogous process under Creating and Implementing User Applications To register the application to the OLT platform make a POST request to the applicationdeveloperapplications endpoint The request passes the following data the authentication token the tenant ID of the tenant owning the application Note Managing Applications You can change the application properties later for example the application name For more information see Managing Custom Applications Example lt highlight curl gt curl X POST httpsapilightelligenceiov1applicationdeveloperapplications H Authorization Bearer authentication token H ContentType applicationjson d quotnamequot quotSample Applicationquot quotallowedTenantsquot quottenantIdquot quottenant Idquot lt highlight gt You get a response similar to the following containing the following data application ID in our example 9aa3b6188cd24dc0b7a1da6df60af254 OAuth2 client ID in our example 44c11af1c5494c1898bdbcef92c8b45b OAuth2 client secret in our example vr7i9P9brKIGYIQ lt highlight json gt 200 quotdataquot quotidquot quot9aa3b6188cd24dc0b7a1da6df60af254quot quotnamequot quotTest Applicationquot quotoauth2Clientquot quotidquot quot44c11af1c5494c1898bdbcef92c8b45bquot quotsecretquot quotvr7i9P9brKIGYIQquot quottypequot quotconfidentialquot lt highlight gt Implement a process to store the OAuth2 client secret Note Why store the OAuth2 client secret To display application data you can use the applicationdeveloperapplications endpoint But the response does not contain the OAuth2 client secret If you dont store it you have to regenerate it making a POST request to the applicationdeveloperapplicationsapplicationIdsecret endpoint To install the application make a PUT request to the applicationsapplication Idinstallation endpoint lt highlight curl gt curl X PUT httpsapilightelligenceiov1applicationsapplication IDinstallation H Authorization Bearer authentication token H ContentType applicationjson lt highlight gt In our example lt highlight curl gt curl X PUT httpsapilightelligenceiov1applications9aa3b6188cd24dc0b7a1da6df60af254installation H Authorization Bearer authentication token H ContentType applicationjson lt highlight gt Optional To verify the installation make a GET request to the applicationsapplicationId endpoint Result Your background application is registered to the OLT platform and installed in a tenant The background application can get data from the tenant in which the application is installed without logging on to the OLT platform Installing the Application in Multiple Tenants To install an existing application in additional tenants whitelist the tenants and install the application in each of them For more information see Managing Custom Applications Implementing a Background Application Implement a confidential OAuth2 client with OAuth2 client secret Procedure To get the OAuth2 access token do the following Implement a process to submit in the request header the tenant ID of the tenant in which the application is installed To use the OAuth2 client credentials flow set the grant type parameter to clientcredentials Submit the OAuth2 client ID and the OAuth2 client secret Make a POST request to the idauthrealmsoltprotocolopenidconnecttoken endpoint curl curl X POST httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnecttoken H 39ContentType applicationxwwwformurlencoded39 H 39tenant tenant ID39 d 39granttypeclientcredentialsampclientidoauth2Clientidampclientsecretoauth2Clientsecret39 In our example curl curl X POST httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnecttoken H 39ContentType applicationxwwwformurlencoded39 H 39tenant tenant ID39 d 39granttypeclientcredentialsampclientid44c11af1c5494c1898bdbcef92c8b45bampclientsecretvr7i9P9brKIGYIQ39 You get a response like the following containing the OAuth2 access token allowing your application to access the tenant data json quotaccesstokenquot quoteyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI4YzhlMDAxMi1lYWFiLTRkYzYtYmZiOC1iNTUyNTQ3YTJiMGEiLCJleHAiOjE1NTgyNjA2OTIsIm5iZiI6MCwiaWF0IjoxNTU3Mzk2NjkyLCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsInN1YiI6IjZmM2Q2MGQwLWJlMzAtNGNiYS1hOTU1LTczMDYzMDExNDg3YyIsInR5cCI6IkJlYXJlciIsImF6cCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjAwNjY4OGIxLTEzZjEtNGJhZi1hNzQxLTc4NTdmZmE5NjM2ZiIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMiLCJjbGllbnRJZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsImNsaWVudEhvc3QiOiIxMC4yNDAuMC42NiIsImNsaWVudEFkZHJlc3MiOiIxMC4yNDAuMC42NiIsInRlbmFudCI6ImIxNzQ3NTc5LTM1NWQtNGI3YS1hYTcyLWMyMzM2ZDNhNzIxMSJ9v7cu0zDJY0BqLSmTUauJW46XkGWOuNxVPV7qY4530FZU2BHwZuR5URPlJtHbWpe2QUqxSXboq4dPnL9PmCltUO11DT6cartsJAte4rvvJE2WHbYtmRasn8bPxZ9ZVFXIHQRDnIKDu0xPl29ijyqkWbTawdxvuLkwThi4GuapqWAjCX2pNBivmuT25QVBAFADcHuxRPgJ5DJ8BbFIOYRWjGRAO9v7RLjANSRjXLCS69WP6nKtZn0xJT0GXCUyyLeozI4FMWosq9UEFb2hIlXi4kJbkKpD6KsXq5RGEL7Ap812DUdTDzfA1IcqLH14S38PTnHCFwRssbx0gquot quotexpiresinquot 863999 quotrefreshexpiresinquot 950399 quotrefreshtokenquot quoteyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJWV0VOVDNBN1FLWllFTURoWFBKd3dVa1Jpd04tREI5OThQeUpoU0gzRDZFIn0eyJqdGkiOiI4ZGMxYWQ3ZC04ZDg1LTQwZjUtOWNjZS05NWZhMGQwNzNlNDEiLCJleHAiOjE1NTgzNDcwOTIsIm5iZiI6MCwiaWF0IjoxNTU3Mzk2NjkzLCJpc3MiOiJodHRwczovL2lkLmRldi5vbHQtZGV2LmlvL3YxL2lkL2F1dGgvcmVhbG1zL29sdCIsImF1ZCI6IjI4ZjgzODE5LTE5OWYtNDQxMC1hZTdmLTcyMjE3NjUxMmI5MyIsInN1YiI6IjZmM2Q2MGQwLWJlMzAtNGNiYS1hOTU1LTczMDYzMDExNDg3YyIsInR5cCI6IlJlZnJlc2giLCJhenAiOiIyOGY4MzgxOS0xOTlmLTQ0MTAtYWU3Zi03MjIxNzY1MTJiOTMiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiIwMDY2ODhiMS0xM2YxLTRiYWYtYTc0MS03ODU3ZmZhOTYzNmYiLCJyZXNvdXJjZV9hY2Nlc3MiOnt9LCJzY29wZSI6Im9sdC1hcHBsaWNhdGlvbnMifQHN0JYs0PchnO1yOiEt05ZLT0slpJgxuHjnAsR6bIPDMeBT0g95ejZvSHp5WsHOeNP8Iu3Z8JCBIEQnTjoSxUVycCtL13ujODsmrzzEFDz4807O4BqMcoTewxBxlCBSxXzn9mrRPPOQkWUnwxVLXy1tcgZns3X9DGtmfWNz7HBwzhjutk2fpY2GOMuENgjhhVLhYYYuhY1E74iCt9uK8XcQsWZKHHxMdNheJ4Us3E78sM9skSUUaa6dIN9dhSD51uB61qiA6zEX91j6FYwSnnLi6CnZMNcwT8ROhxKOyxN98JDRJCwTcPHFcAeFHlTYohRqFTHVnuwAg38Qquot quottokentypequot quotbearerquot quotnotbeforepolicyquot 0 quotsessionstatequot quot006688b113f14bafa7417857ffa9636fquot quotscopequot quotoltapplicationsquot To verify that your application can access tenant data fetch some data from a tenant that has installed the application with the authorization token retrieved from the application For example list the devices registered to the tenant by making a GET request to the devices endpoint curl curl X GET httpsapilightelligenceiov1devices H 39Authorization Bearer access token39 H 39ContentType applicationjson39 In our example curl curl X GET httpsapilightelligenceiov1devices H 39Authorization Bearer ey 39 H 39ContentType applicationjson39 You get a response similar to the following json quotmetaquot quotpagequot 0 quotpageSizequot 50 quotitemsTotalquot 6 quotpagesTotalquot 1 quotdataquot quotidquot quot383b8c61a9c7487fb4e166fad753e546quot quotinfoquot quotnamequot quotRGB LEDquot quotdescriptionquot quotquot quotdeviceTypeIdquot quot04f14462b44f493caa2cdd6d1c439ec3quot quottagsquot quotlocationquot quotquot "},{"title":"Registering and Implementing User Applications","href":"/applications/registering-user-applications","body":"To turn a user application into an OAuth2 client register it to the OLT platform and implement OAuth2 in your application Note Simulating Applications In the following we use OAuth 20 ltdebuggergt httpsoauthdebuggercom to simulate an application Prerequisites To register applications to the OLT platform you have owner or writer authorization Note Checking permissions If you use default roles to verify you have owner or writer authorization in the OLT portal under Users check your roles If you use custom roles verify the user permissions for the specific endpoints For more information see Defining Custom Roles Registering and Installing an Application To access your data in the OLT platform create an application using the OLT API To allow your application to communicate with the OLT platform create an OAuth2 client Procedure Obtain your tenant ID and an authentication token Log on to the OLT portal httpsportallightelligenceio Select the tenant who is to own the application Under Developer Area look up the authentication token in our example eyJhbGciOi tenant ID in our example b1747579355 lt figure srcimagestenantidpng captionDisplaying the Authentication Token and Tenant ID in the Developer Area altDisplaying the Authentication Token and Tenant ID in the Developer Area gt To register the application to the OLT platform make a POST request to the applicationdeveloperapplications endpoint You have the following options depending on the application type Web application recommended Create web applications authenticating users with the OAuth2 client secret Ensure that the withPublicOauth2Client property is set to false confidential User Agent application If you dont have a backend service to store the OAuth2 client secret set the withPublicOauth2Client property to true public The request passes the following data one or more redirect URLs where your application is to be hosted Define different redirect URLs for development test and production for example Wildcards are not allowed in the redirect URLs In our simulation the redirect URL is httpsoauthdebuggercomdebug the authentication token the tenant ID of the tenant owning the application Note Managing Applications You can change the application properties later Add a description and a URL to provide additional information for example If you have multiple tenants to facilitate application management consider assigning all applications to the same tenant owning the applications For more information see Managing Custom Applications Example of a web application authenticating users with the OAuth2 client secret quotwithPublicOauth2Clientquot false lt highlight curl gt curl X POST httpsapilightelligenceiov1applicationdeveloperapplications H 39Authorization Bearer authentication token39 H 39ContentType applicationjson39 d 39 quotnamequot quotMy application namequot quotwithPublicOauth2Clientquot false quotallowedTenantsquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotcommentquot quotExample Inc northern plantquot quotredirectUrisquot quothttpsoauthdebuggercomdebugquot quothttpsdevapplicationcomauthcallbackquot quothttpsprodapplicationcomauthcallbackquot 39 lt highlight gt You get a response similar to the following The type is confidential web application or public user agent application The response contains the following data application ID in our example 33333331111222233334534g4gd4 OAuth2 client ID in our example 7222223111122223333fb4444444b7c OAuth2 client secret in our example 9vxPaAd3HmXhNXf Example of a response for a web application quotwithPublicOauth2Clientquot false lt highlight json gt quotdataquot quotidquot quot33333331111222233334534g4gd4quot quotnamequot quotMy Web Applicationquot quotwithPublicOauth2Clientquot false quotoauth2Clientquot quotidquot quot7222223111122223333fb4444444b7cquot quotsecretquot quot9vxPaAd3HmXhNXfquot quottypequot quotconfidentialquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotstatusquot quotactivequot quotcreatedAtquot quot20190425T150715392Zquot quotupdatedAtquot quot20190425T150715392Zquot quotallowedTenantsquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotcreatedAtquot quot20190425T150715407Zquot quotinstalledquot false quotcommentquot quotExample Inc northern plantquot quotredirectUrisquot quothttpsoauthdebuggercomdebugquot quothttpsdevapplicationcomauthcallbackquot quothttpsprodapplicationcomauthcallbackquot lt highlight gt Example of a response for a user agent application quotwithPublicOauth2Clientquot true lt highlight json gt quotdataquot quotidquot quot2f594b28411e43349f7275e1bff2e7f3quot quotnamequot quotMy User Agent Applicationquot quotwithPublicOauth2Clientquot true quotoauth2Clientquot quotidquot quotfe1e57041fb14e66818df7724f1743e0quot quotsecretquot quotgX1WLw4O7YBwjsw5quot quottypequot quotconfidentalquot quotpublicOauth2Clientquot quotidquot quot3f7225f7981846348613c9676935847aquot quottypequot quotpublicquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotstatusquot quotactivequot quotcreatedAtquot quot20190516T090110825Zquot quotupdatedAtquot quot20190516T090110825Zquot quotredirectUrisquot quothttpsoauthdebuggercomdebugquot quothttpsdevapplicationcomauthcallbackquot quothttpsprodapplicationcomauthcallbackquot quotallowedTenantsquot quottenantIdquot quotb1747579355d4b7aaa72c2336d3a7211quot quotcreatedAtquot quot20190516T090110918Zquot quotinstalledquot false quotcommentquot quotExample Inc northern plantquot lt highlight gt You have now registered the application to your tenant so the application is available to be installed in the tenant Implement a process to store the OAuth2 client secret If you develop a user agent application without a backend service to store the OAuth2 client secret ensure that you have set the withPublicOauth2Client property to true in step 1 Note Why store the OAuth2 client secret To display application data you can use the applicationdeveloperapplications endpoint But the response does not contain the OAuth2 client secret If you dont store it you have to regenerate it making a POST request to the applicationdeveloperapplicationsapplicationIdsecret endpoint To install the application make a PUT request to the applicationsapplicationIdinstallation endpoint lt highlight curl gt curl X PUT httpsapilightelligenceiov1applicationsapplicationIDinstallation H 39Authorization Bearer authentication token39 H 39ContentType applicationjson39 lt highlight gt In our example lt highlight curl gt curl X PUT httpsapilightelligenceiov1applications33333331111222233334534g4gd4installation H 39Authorization Bearer eyJhbGciOi H 39ContentType applicationjson39 lt highlight gt Optional To verify the installation make a GET request to the applicationsapplicationId endpoint Result You get a response similar to the following lt highlight json gt data tenantId b1747579355d4b7aaa72c2336d3a7211 createdAt 20190425T102720312Z lt highlight gt Your application is registered to the OLT platform and installed in the tenant owning the application A user can logon to the OLT platform and use your application as an OAuth2 client to get data from the tenant in which the application is installed Installing the Application in Multiple Tenants To install an existing application in additional tenants whitelist the tenants and install the application in each of them For more information see Managing Custom Applications Implementing OAuth2 in the Application Enable your application to act as an OAuth2 client depending on the application type Web application running on a web server User agent application running in a browser Implementing a Web Application If you have a web application in which the application source code is protected implement a confidential OAuth2 client with OAuth2 client secret We recommend web applications due to safety reasons Prerequisites When registering the application to the OLT platform you have set the application property withPublicOauth2Client to false see above Procedure To get the OAuth2 authorization code redirect the API call to the URL of our OLT authorization server idlightelligenceio lt highlight curl gt httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnectauth clientidoauth2Clientid ampredirecturiredirectUri ampscopeopenid ampresponsetypecode ampresponsemodeformpost lt highlight gt In our example we authenticate the OAuth 20 ltdebuggergt application simulation hosted under httpsoauthdebuggercomdebug lt highlight curl gt httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnectauth clientid7222223111122223333fb4444444b7c ampredirecturihttpsoauthdebuggercomdebug ampscopeopenid ampresponsetypecode ampresponsemodeformpost lt highlight gt lt figure srcimagesapplicationscodeflowpublicrequestauthcodepng captionSimulating an Authorization Code Request with OAuth 20 ltdebuggergt altRequesting the Authorization Code gt If the user isnt logged on to the OLT platform already the login screen appears On selecting the tenant the user is redirected to the redirect URL You get the OAuth2 authorization code in our example eyJhb lt highlight json gt name code value eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0ZT1EOZlAoohBhGj2J24ydwuyRYHynYGlrNpve4UmjsMXzVfXp2XBQPfXHrQWjfqYrPOUZVWoDWDJp7DpWvL8YAPnKANQnUsfEyE3JMA7qdOUHNr5wf2mT1tU3L1RBARui3gefXWlSZXTcCULnPmwjqyfVKRb5IPG6N2Y20Xn0BBFEZEtN1AXslYvts4nKUGMetg03NKP9Pi3CYVFrlUZIR6sAGsIeNXRiJPtXZ7CtQPStQGOMKYTCXKWT9WUem7FOn3bUp7dEWR5GrpI6Me3lQsqicV9zoH6i293g name sessionstate value da6ee4696030495fa1ce7262a7b65ef9 lt highlight gt lt figure srcimagesapplicationscodeflowpublicgetauthcodepng captionGetting the OAuth2 Authorization Code with OAuth 20 ltdebuggergt altRequesting the Authorization Code gt To get an OAuth2 access token implement a browser callback function to extract the OAuth2 authorization code and make the following POST request to the idauthrealmsoltprotocolopenidconnecttoken The request passes the following data to the OLT authorization server the OAuth2 authorization code the OAuth2 client ID of your application the redirect URL the clientsecret lt highlight curl gt curl X POST httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnecttoken H 39ContentType applicationxwwwformurlencoded39 d 39granttypeauthorizationcodeampcodeauthorizationCodeampclientidoauth2ClientidampredirecturiredirectUriampclientsecretoauth2Clientsecret39 lt highlight gt In our example lt highlight curl gt curl X POST httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnecttoken H 39ContentType applicationxwwwformurlencoded39 d 39granttypeauthorizationcodeampcodeeyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0ZT1EOZlAoohBhGj2J24ydwuyRYHynYGlrNpve4UmjsMXzVfXp2XBQPfXHrQWjfqYrPOUZVWoDWDJp7DpWvL8YAPnKANQnUsfEyE3JMA7qdOUHNr5wf2mT1tU3L1RBARui3gefXWlSZXTcCULnPmwjqyfVKRb5IPG6N2Y20Xn0BBFEZEtN1AXslYvts4nKUGMetg03NKP9Pi3CYVFrlUZIR6sAGsIeNXRiJPtXZ7CtQPStQGOMKYTCXKWT9WUem7FOn3bUp7dEWR5GrpI6Me3lQsqicV9zoH6i293gampclientid7222223111122223333fb4444444b7campredirecturihttpsdevapplicationcomauthcallbackampclientsecret9vxPaAd3HmXhNXf39 lt highlight gt Note We cant simulate this step because the request requires the application to be in the same session in our example the httpsoauthdebuggercomdebug application session Result You get the OAuth2 access token allowing your application to access the tenant data lt highlight json gt 200 accesstoken eyAdG lt highlight gt Implementing a User Agent Application If you have a browser application without a backend service a JavaScript application for example retrieve the OAuth2 authorization code without the OAuth2 client secret Prerequisites You have registered and installed the applicattion as described above When registering your application to the OLT platform you have set the application property withPublicOauth2Client to true Procedure To get the OAuth2 authorization code redirect the API call to the URL of our OLT authorization server idlightelligenceio lt highlight curl gt httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnectauth clientidoauth2Clientid ampredirecturiredirectUri ampscopeopenid ampresponsetypecode ampresponsemodeformpost lt highlight gt To get an OAuth2 access token implement a browser callback function to extract the OAuth2 authorization code and make the following POST request to the idauthrealmsoltprotocolopenidconnecttoken The request passes the following data to the OLT authorization server the OAuth2 authorization code the OAuth2 client ID of your application the redirect URL lt highlight curl gt curl X POST httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnecttoken H 39ContentType applicationxwwwformurlencoded39 d 39granttypeauthorizationcodeampcodeauthorizationCodeampclientidoauth2ClientidampredirecturiredirectUri39 lt highlight gt In our example lt highlight curl gt curl X POST httpsidlightelligenceiov1idauthrealmsoltprotocolopenidconnecttoken H 39ContentType applicationxwwwformurlencoded39 d 39granttypeauthorizationcodeampcodeauthorizationCodeampclientid7222223111122223333fb4444444b7campredirecturihttpsoauthdebuggercomdebug39 lt highlight gt "},{"title":"Troubleshooting Application Management","href":"/applications/troubleshooting-application-management","body":"Access Denied Your custom application cant access a certain endpoint Verify that an endpoint has the permission required to access the tenants data Background For security reasons custom applications are not allowed to use API endpoints related to tenant management and user management You can access these endpoints only in the OLT portal So even if your user has the owner role with a custom application the access is restricted to permissions assigned to the writer role If you need to develop custom applications that use endpoints related to user management contact our OLT support under x6311111011697x63x74x40x6cx69x67104x74x65108x6c105103101110x63x65x2e105x6f Custom applications cannot access endpoints which require the following permission quottenantreadquot quottenantwritequot quottenantusermanagementreadquot quottenantusermanagementwritequot The tenantstenantIdusersuserIdroles endpoint for example requires the quottenantusermanagementreadquot permission You cannot access it with a custom application Prerequisites You have owner or writer authorization Procedure Make a GET request to the permissions endpoint To authenticate the request use the OAuth2 access token curl curl X GET httpsapilightelligenceiov1permissions H 39Authorization Bearer OAuth2 access token39 H 39ContentType applicationjson39 You get a response similar to the following json meta page 0 pageSize 50 totalSize 26 data permissions id 78624d68b09c4e28ae5e812c3cfa1126 alias devicetypesread category devices name Access devicetypes description Get device types and online monitoring rules nList available device types and categoriesn id d06e523bd7294b6db7b7203ab8eaf102 alias devicetypeswrite category devices name Edit devicetypes description Create device types nModify device types and online monitoring rules nRemove device typesn "},{"title":"Identifying Your Use Case","href":"/applications/use-cases","body":"Choose an applications type depending on your use case and off you go Applications with User Interaction To retrieve an OAuth2 access token you can implement an OAuth2 client with or without OAuth2 client secret depending on the application type Web application running on a web server in which the application source code is protected Implement a confidential OAuth2 client with OAuth2 client secret User agent application running in a browser in which the application source code may be viewed a JavaScript application for example Implement a public OAuth2 client without OAuth2 client secret For safety reasons we recommend web applications using a backend service providing the OAuth2 client secret In this case proceed with Creating and Implementing Applications with User Interaction Background Applications without User Interaction A background application is installed on the computer Background applications are not connected to a user Create background applications for the following use cases for example A server running scheduled events fetching data from the OLT platform A background script fetching device data for all tenants which have installed an application independent of users Slackbot or other notification applications In this case proceed with Creating Background applications without user interaction"},{"title":"Developing Applications with the SDK","href":"/applications/using-application-sdk","body":"lt todo gt Jonathan how would I proceed as a Lightelligence customer stepbystep lt todo gt tbd this chapter is a placeholder Installing the Lightelligence Demo App Use Get an idea what applications using the OLT API are Procedure Install nodejs if I dont have it already Install the lightelligencebrowsersdk dependency How exactly npm install gitbitbucketorglightelligencelightelligencedemoappgit Result As of now I get Could not install from bitbucketorglightelligencelightelligencedemoappgit as it does not contain a packagejson file Reason I probably need the local private read access token to our npm since the demo app is not public When its public the customers wont need it correct Start the app cd into lightelligencedemoapp npm start Open httplocalhost3000 to view it in the browser "},{"title":"Processing Data","href":"/data/_index","body":"There are four ways of retrieving the sensor data DeviceState Digital Twin Aggregated Data Raw Data Last 1h Turing What is the difference between the four ways of retrieving sensor data What is the typical usecases What are the contracts behind each of these endpoints what are the guarantees How quick can someone expect an answer How quick does data show up in the dumps What role does the device type play "},{"title":"Generating Time Series Data Dumps","href":"/data/generating-timeseries-dumps","body":"tbd"},{"title":"Using Aggregated Data","href":"/data/get-aggregated-data","body":"tbd"},{"title":"Querying Times Series Data","href":"/data/querying-times-series-data","body":"Apply multiple filters to your time series data With a single API call get data from multiple devices Use cases Obtain data from devices connected to a specific gateway from devices of a certain category tbd link to chapter device type Assigning categories from devices with specific tags tbd link to chapter Devices Assigning tags tbd Jewgeni"},{"title":"Streaming Data","href":"/data/streaming-data","body":"Team Turing What is the outbound streaming meant to be used for How can it be used in a browser How can it be used in a backend What are the limitations What does the user need to know when using the websocket connection ie retries Setting Up Websocket Streaming tbd Including Filters in Websocket Streaming Use cases Filter by device type Filter by tag tbd Jewgeni"},{"title":"Visualizing Data","href":"/data/visualizing-data","body":" Create template dashboard Copy template to stream in Qlik Qlik stream OLT tenant Apply new versions of template later on "},{"title":"Managing the OLT Lifecycle","href":"/devices/_index","body":"To connect your actual IoT system landscape to the OLT platform replicate the processes you implemented in the Getting Started section of your OLT user journey Add one device after the other according to the travel plan you have prepared under Mapping the OLT Landscape Keep in touch with the places you have visited during your OLT journey Monitor your devices and keep their firmware and configurations uptodate"},{"title":"Executing Commands on Devices","href":"/devices/actions-getting-started","body":" Besides reading sensor data executing commands on devices is another basic IoT use case So lets write values to devices to trigger actions In the JSON schema of a device type we have another dedicated property for this actions While the attributes property is readonly the actions property is writeonly Actions are commands that a device can execute In the following example light up an RGB LED by sending a certain color code in 2 steps Use the Bash script to set up your RGB LED and connect it to the OLT platform Simulate an application lighting up the LED To do so make a POST request to the devicesdeviceIdactions MQTT endpoint Setting Up Your LED Attach an RGB LED to your Raspberry Pi and execute a Bash script to connect it to the OLT platform Prerequisites You have connected your Raspberry Pi with the raspiansetupsh Bash script described under Connecting a Device in 3 Steps With this scenario you have installed an MQTT client Python and the Python module pahomqtt on your Raspberry Procedure Attach a 4pin RGBLED to your Raspberry Pi In our example we map the GPI pins as follows LED Raspberry Pi Red GPIO Pin 23 Cathode Ground Green GPIO Pin 24 Blue GPIO Pin 25 Under githubcomounisraspberrypideviceonboarding download the installrgbsh Bash script The bash script does the following Prompt you to enter your authentication token Prompt you to enter the tenant name or ID Create a device in the OLT platform and a corresponding device type Generate a device key Generate a device certificate Save a Python program rgbpy in the directory created The Python program passes the action data from the OLT platform to the device via MQTT messages Create a cron job to execute the Python program Subscribe your device to the MQTT endpoint of the OLT platform To execute the Bash script do the following Make it executable chmod x installrgbsh Execute the script installrgbsinstallrgb On request of the Bash script do the following Enter the platform URL lightelligenceio Enter the authentication token displayed in in the OLT portal under Developer Area Enter your tenant name or your tenant ID displayed in in the OLT portal under Developer Area Result Your Raspberry Pi is now able to receive actions from the OLT platform When you inspect the script you will see its purpose is to connect your device to the MQTT endpoint of the OLT platform To do so it subscribes the Raspberry Pi to the devicesdeviceIdactions MQTT topic lt highlight curl gt mosquittosub h mqttlightelligenceio p 8883 cafile oltcapem cert devicecertpem key devicekeypem V mqttv311 t devicesdeviceIdactions d lt highlight gt Also the Bash script has created the following a device type with a JSON schema containing the actions property lt figure srcimagesactionsgettingstarteddisplayingjsonschemapng captionEditing the actions Property altEditing the actions Property gt a digital twin associated with the device type Triggering an Action on Your Device Trigger an action on your device To do so make a POST request to the devicesdeviceIdactions MQTT endpoint as in the following cURL example To light up the LED in blue use the following message for example lt highlight curl gt curl X POST httpsapilightelligenceiov1devices383b8c61a9c7487fb4e166fad753e546actions H Authorization Bearer authenticationToken H CacheControl nocache H ContentType applicationjson d action ambientLight payload r 0 g 0 b 1 description Switch on blue light lt highlight gt curl X POST quothttpsapilightelligenceiov1devices383b8c61a9c7487fb4e166fad753e546actionsquot H 39Authorization Bearer authenticationToken39 H 39CacheControl nocache39 H 39ContentType applicationjson39 d 39 quotactionquot quotambientLightquot quotpayloadquot quotrquot 0 quotgquot 0 quotbquot 1 quotdescriptionquot quotSwitch on blue lightquot 39 Result An action ID is generated quotdataquotquotactionIdquotquot5895f5f093e9428ca4b6580eb814f11equot for example The LED is switched on In our example it lights up blue lt figure srcimagessendactionrgbledpng captionTriggering an Action altTriggering an Action gt You have successfully forwarded an action to your device"},{"title":"Connecting Gateway Devices","href":"/devices/connecting-gateways","body":" The gateway process is still under discussion This chapter is a placeholder In a typical setup devices dont communicate with the OLT platform directly but via a gateway A gateway allows you to integrate device that are not IoT enabled lt figure srcimagesgatewaysetuppng captionGateway Setup altGateway Setup gt In this setup you proceed as follows Create the device type for each device Create a device type for the gateway device Create a device for the gateway Create a device for each sensor with the right device type Modify all sensor devices to make them connectedBy the gateway device Assign a unique alias which is also available later for the gateway ie mac address to each of the device In the gateway Create certificate Enable MQTT to dataingest Aliases are used only in MQTT and HTTP data and eventingest messages In the devicesid RESTAPI aliases can only be used on the GET devices endpoint as query The devices aliases array is included in the cloud to device message in addition to the devices uuid Begin Notes 20190611 Adapter SDK encapsulates calls of the gateway API bot MQTT and HTPP It binds libraries and facilities eg if it creates a device in the gateway and in the OLT platform it automatically adds the gatreway device ID as the connectedBy including the the adapter and the field devices Every device that needs to be reached from the cloud needs to have the connectedBy attribute set The gateway can be virtual or physical adapters are software only run in gateway or something similar eg have 1 gateway and multiple devices running adapters to have enough RAM or processing power Field device either virtual for testing and illustration or physical with protocol Adapter translates field communication to OLT and vice versa if interface between gateway and field eg Gateway has GUI with devices available in LAN if compatible ie has an adapter then onboarding Gateway launches adapter hat translates communication from device to gateway and from gateway to OLT and vice versa Typically send attributes Adapter first uses the HTTP API to create types devices and schema then uses MQTT API to post attributes configuration changes to OLT and if supported get config updates from OLT which need to be parsed and implemented in field device get actions from OLT that need to be parsed and implemented in field eg turn bulb on Gateway is a selfcontained development solution developer can connect to gateway Swagger interface to know which calls are possible and test the calls Also supports MQTT and HTPP endpoinmts similar to OLT Has SDK a collection and integration API storing SDK makes writing adapters easy ag Zigbee adapter can then ported to other wireless technology The gateway is a device type get unique ID it will somehow be shared in OLT to be discussed with Henri different tenants or users can share gateways Gateways is ARMbased hardware or can be embedded in existing hardware eg DALI Pro runs under nodejs platformagnostic eg Raspi Win Adapter SDK should allow to easily writer glue code to bind the gateway and the field code The gateway is a translator to talk the protocol End Notes 20190611 A gateway allows you to integrate device that are not IoT enabled The devices have aliases Via script Some kind of process that describes how I control devices via a gateway To check the devices are related to the gateway via the connectedby property and represented by aliases Imagine a customer using Hue The enduser controls lights via the app but the customer wants to have usage statistics Here comes the OLT platform There is a bulb in every room As per the hue API it has a unique endpoint id in the form AABBCCDDEEFF0011XX Also it has an on state Our customer wants the on state to be reported to the OLT database for each bulb attached to the bridge To do so he might make GETrequests to the apiltusernamegtlightsltidgt endpoint see the httpsdevelopersmeethuecomdevelophueapilightsapigetattrandstate endpoint state hue 50000 on true effect none alert none bri 200 sat 200 ct 500 xy 05 05 reachable true colormode hs type Living Colors name LC 1 modelid LC0015 swversion 103 How would our customer proceed to get the state data into the OLT platform Create device type The on state corresponds to an on attributes property in the bulbs device type Create device The hue device ID AABBCCDDEEFF0011XX I assume correponds to an alias the connectedBy property contains the gateway ID See httpsapilightelligenceiov1apicollectiontagdevices info name Gateway North 1 deviceTypeId 123e4567e89b12d3a456426655440003 description Gateway left from the right door under the orange pillow installationTimestamp 19850412T23205052Z tags connectedBy 123e4567e89b12d3a456426655441337 location siteAbuildingBfloorCroomD aliases frontdoor RoomA 060000000000 coordinates configuration brightness 60 color custom my Modeling Gateways Jos how do I manage gateway in progress conectedby means device is behind a gateway 2844 the device depends on the 3e12 device which is a gateway httpslightelligenceatlassiannetbrowseOLT1713 Support External Device IDs httpslightelligenceatlassiannetwikispacesOCPpages342261874F001SupportExternalDeviceIDs Aliases can be added at creation of the device or later on edit if I send action the gateway has to dispatch it to the device Jos how do I refer to the gateway ID when posting anaction the corresponsing device Turing What do we define a gateway How can a device be configured to be a gateway in the cloud What does it mean to configure a device to be a gateway in the cloud How does the connectedBy attribute work What does it allow the other device to do How can the aliases be used to use protocol specific identifiers in the gateway How does the gateway integrate in the cloud to device concept Complex Device Type Schema Data You have already used two different kinds of schema data types numbers and objects JSON schema also allows strings booleans and arrays The following command creates a device type that has an array of booleans as an attribute The array must contain 2 up to 5 items defined by minItems and maxItems While you cannot report an array to timeseries your reportingRules can contain a rule to report an item with a specified index In this case the first array element a boolean is reported to timeseries See httpslightelligenceiodocsgettingstarted"},{"title":"Creating Devices","href":"/devices/creating-devices","body":"Creating a device basically means the following Assigning a device type describing the device capabilities Assigning a device certificate and registering it to the the OLT platform to ensure encrypted communication Describing the device so as to be able to manage devices efficiently Creating a Device Type tbd Explain device type as prerequisite Creating a Device Certificate Note Using a Custom Certificate Authority Our example is based on the OpenSSL command line utility to create a selfsigned device certificate for a particular device Alternatively you can use or create your own certificate authority CA and have your device certificates issued by that CA Just make sure the device certificate is assigned to the particular tenant and device via the the Organization Name and Common Name parameters as described in the following tbd Adress UI feature request to what team who is responsible for the UI Rams 1 Under Developer Area display not only the tenant ID but also the tenant name The user might not be sure about how the tenant technical name is spelled Analogously to the device nameID 2 Replace TenantID with Tenant ID wo hyphen tbd check whether OLT4311 is resolved and insert the following Achtung Bildrefs gehen in Note nicht Under Android and Windows without bash You are asked to enter additional information 4 Enter data as required Country Name Enter the country code DE for Germany for example Henri do we use this info is it relevant or can we leave it empty State or Province Locality city for example Organization Name Organizational Unit Common name server FQDN for example tbd what is FQDN EMail Address Henri Whose email is supposed to be relevant here Note Creating a Device Certificate under Windows Under Windows pass the subj argument with leading double forward slashes Use backslash to separate the keyvalue pair see Creating a Device Certificate under Windowsimagedevicecertificatewindows openssl req new key devicekeypem x509 days 365 out devicecertpem subj OSampleTenantCNSampleDevice imagedevicecertificatewindows Creating a Device Certificate under Windows using the IDsimagesdevicecertificatewindowspng userwindevice MINGW64 openssl ecparam out devicekeypem name prime256v1 genkey cuserwindevice MINGW64 openssl req new key devicekeypem x509 days 365 out devicecertpem subj OMusterTenantCNW541 Creating a device In the OLT platform create a digital twin of your device based on the device type created Procedure 1 Under Devices Types Devices choose Create Device 2 Select the device type 3 Describe the device Name description and tags help you to monitor and maintain the devices in your system landschape Name Enter a number according to your floor plan and naming schema for example Location Office 1 Desk 1 for example Description Describe the function Illuminates desk 1 for example Tags To be able to apply queries and filters you can specify relevant device properties To confirm choose Create Device "},{"href":"/devices/deploying-binaries-to-devices","body":" title Deploying Binaries to Devices linktitle Deploying Binaries to Devices description Maintain your devices by updating their firmware or by deploying bootloaders or configuration files to them date 20190614 publishdate 20190601 categories devices keywords device typefirmwarebootloaderconfigurationslots tags aliasconnectedBytypesfirmwarebootloaderconfiguration filesslots menu docs parent devices weight 60 weight 60 sectionsweight 60 draft false aliases devicesoverviewquickstart toc true SDK refactoring not yet finished The firmware process is still under discussion This chapter is a placeholder Begin Notes 20190611 Jos not in scope of V10 Adapter SDK roadmap has changed a lot is going to be discussed discuss test case End Notes 20190611 hatem t understand the flow Host firmware in the OLT platform centrally and deploy it to your devices To deploy firmwares bootloaders or configuration files to your devices schedule downloads to your devices To keep track whether biaries have been installed successfully perform status updates Hosting files Procedure Create file and provide metadata UUID tenant ID etc httpsapilightelligenceiov1firmwares Upload file Attach a blob to a firmware firmwaresidblob A download link for the blob is added to the firmware resource which can be used to download the blob Installing a Firmware On a Device POST devicesdeviceIdfirmwareinstallations tbd Clarify the following This endpoint creates a new firmware installation resource This resource represents the status of installation into the slot for the specific device Once it created the device start receives installation instructions via MQTT tbd How do I schedule the process Monitoring the Installation Status Get firmware installation status GET devicesdeviceIdfirmwareinstallationsinstallationId Update firmware installation status PATCH devicesdeviceIdfirmwareinstallationsinstallationId Clarify This endpoint enables updating the status of firmware installation for a device This installation status is tracking on the cloud side Used by devicesgatewaysanalyticsetc which report statuses of the installation firmware into the slot tbd In what case would I use GET vs PATCH Managing Files Download file GET firmwaresidblob tbd in what case do I download the file List tenant files GET firmwares Get details GET firmwaresid Update files Please note that its only allowed to attach a blob once In case a blob is attached more than once you will get a 423 status code indicating that the resource is locked tbd Whats the workaround Delete and Create new What does this mean for scheduled processes Delete file DELETE firmwaresid s Jewgeni PPT Info Installing Binaries httpslightelligenceatlassiannetwikispacesOCPpages740524173F017BlobPushFirmwareUpdate More complex device have a firmware or other binary executables installed that need to get updated from time to time How do we do it Jos When SDK refactoring is finished adapters will be updated Jos will be able to test all actions including firmware update whats the status Process outline First need to have the binary somewhere accessible in the slot Action Gateway downloads binary for that firmware update and push it to the device with the field procedure for the device Report back to OLT an answer to the action successfailure for example config Inspect the communication in the Steinel web client 1 Firmware Update Gives URL for upload 2 Click update triggers REST API call initiating the installation of the new binary Jos used already Example There are 3 slots Firmware Bootloader Configuration Slots for binaries Jos not yet looked into it is going to perform first whats the status quotnamequot quotExtended OSR Light switchquot quotmanufacturerquot quotOSRAMquot quotmodelquot quotC3POquot quotdescriptionquot quotNewest version of the switchquot quotcategoriesquot quoturnomalwm2mext3001quot quoturnomaexampleext1002quot quoturnomaexampleext1003quot quotreportingRulesquot quotpathquot quotconfigurationbrightnessquot quotreportToquot quottimeseriesquot quotschemaquot quotconfigurationquot quotbrightnessquot quottypequot quotnumberquot quotpropertyquot quoturnomalwm2mext5548quot quotminimumquot 0 quotmaximumquot 100 quotcolorquot quottypequot quotobjectquot quotpropertiesquot quotrquot quottypequot quotnumberquot quotminimumquot 0 quotmaximumquot 255 quotgquot quottypequot quotnumberquot quotminimumquot 0 quotmaximumquot 255 quotbquot quottypequot quotnumberquot quotminimumquot 0 quotmaximumquot 255 quotrequiredquot quotrquot quotgquot quotbquot quotattributesquot quottemperaturequot quottypequot quotnumberquot quotpropertyquot quoturnomalwm2mext5700quot quothumidityquot quottypequot quotnumberquot quotminimumquot 0 quotmaximumquot 100 quoteventsquot quotoverheatedquot quotactionsquot quotraiseTemperaturequot quottypequot quotobjectquot quotpropertiesquot quotvaluequot quottypequot quotnumberquot quotdescriptionquot quottypequot quotstringquot quotslotsquot quotfirmwarequot quotnamequot quotTest namequot "},{"title":"Managing Devices","href":"/devices/managing-devices","body":"When you create digital twins representing your physical devices in the OLT platform add metadata to be able to manage them effeciently Managing devices means for example Make queries to list existing devices Use filters to stream data provided by specific device groups httpslightelligenceslackcommessagesDHUFMMW9W slide 6 We provide two levels of metadata semantic description On the device type level categorize your devices by describing the capabilities and use specify external specifications the device conforms to Use established resource identifier schemas eg LWM2M or your create your own identifier schemas Query devices based on the categories assigned to them httpslightelligenceslackcommessagesDHUFMMW9W slide 6 On the devices level describe individual devices by describing their location for example Categorizing devices Classify devices by specifying categories in the the accociated device types To assign categories define custom ones resource identifier schemas or use established ones Use for example URN Namespace for Open Mobile Alliance OMA Lightweight M2M resource model urnomaOMAresourceResourceSpecificString Open Connectivity Foundation OCFIpso interoperability for consumers businesses and industries communications platform a bridging specification an open source implementation and a certification program Procedure To assign a category make a tbd in the portal I dont find the option to addedit a category Jos how do we apply the following for example Do we have examples What other resource models are relevant in the industry sh quottemperaturequot quottypequot quotnumberquot quotpropertyquot quoturnomalwm2mext5700quot Describing Device Types Prerequisites You have writer authorization Procedure Under Devices amp Types on the Device Types tab choose the device type Under Device Type Information choose Edit Alternatively make a PATCHrequest to the devicetypesdeviceTypeIdhttpsapilightelligenceiov1apicollectiontagdevicetypespaths1devicetypes1deviceTypeIdpatch endpoint Querying Devices Filtering Querying httpslightelligenceatlassiannetwikispacesOCPpages793411660DeviceFilteringGuidelines httpslightelligenceslackcommessagesDHUFMMW9W slide 8 Query timeseries data based on a combination of filter criteria with a single API call New devicetimeseriesdump endpoint allows to query data based on a variety of filter criteria This allows to retrieve data more efficiently with less API calls Tagging a Device Jos How do we actually use the fields of the device ie location description tags Categorizing Devices and Device Types Specify the device type to allow for filtering and querying "},{"title":"Monitoring Devices and Alerting","href":"/devices/monitoring-devices","body":"lt The eventingest process is still under discussion This chapter is a placeholder gt Begin Notes 20190611 Note its being discussed whether the event type is fixed modeled like attributes allowing to pass values Jos Eventdef does not have type events greatEvent raw docu as of 20190611 httpslightelligenceatlassiannetwikispacesOCPpages97419311MQTTMessages Payload example deviceId 123e4567e89b12d3a456426655440000 type overheated createdAt 20150804T190514318570484Z new time attribute createdAt type hardcoded under discussion whether it should be fixed or whether payloud should be possible overheating event temperature payload data would make sense Jos if I understand it correctly the following applies both to events and attributes the difference being eventingest vs dataingest 2 configurations for polling minimummax period and chache value that can be set for every attribute to manage how the information is stored in OLT polling query device every x seconds If chache is enabled only changed values will be posted Polling use case eg steinel only allows polling polling webpage in JSON format is posted Use polling if field device protocol does not support eventbased communication eg DALI eventbased preferred way to structure adapter it consumes less resources is more efficient device initiates event sends event to adapter subscribe to topic notifications are sent if values change eg bluetooth low energy BLE subscribe to a topic characteristics you get notifications if values of charactersitics change Adapter set up listener for notifications to arrive a field BT adapter hardware adapter reposts events from BT hardware the mechanism is implemented in the protocol no need to pull mixed use cases eventbased for some features for others might necessary Jos reportingTime should be configurable in the OLT portal analogously to reporting rules for example correct Example reporting time object reportingTime path 39attributesReadAttribute39 pmin 1 pmax 1 usecache false Jos check my interpretations Max value will be reposted if max value is reached Min value will be reposted at least every n units of time Or shortest period of time the value can be refreshed at least n units of time must have passed Cache same value reposted or not Jos is cache truefalse independent of pminpmax Or are the interdependent attrspmin isNumberattrspmin attrspmin qnsogetlwm2mServer 0 defaultMinPeriodattrspmax isNumberattrspmax attrspmax qnsogetlwm2mServer 0 defaultMaxPeriod attrsmute isBooleanattrsmute attrsmute true attrscancel isBooleanattrscancel attrscancel true attrslastRpVal attrslastRpVal null attrsusecache isBooleanattrsusecache attrsusecache false End Notes 20190611 Implement funnctions to monitor your devices and create alert For this the OLT platform provides the event device type property ant the associated eventingest MQTT topic Reading Status Data Lets take a shutter contact as an example In this simple example the relevant properties in the device type JSON schema are attributes for sensor data and events for onetime events Procedure If your existing solution or a new device you want integrate doesnt have an API documentation intercept the communication Use for example the Firefox console CrtlShiftK to inspect the HTTP requests the devices web client sends to the device The following example inspects the status and configuration of a thermostat and a shutter contact controlled by a gateway lt figure srcimagesdevicetypeinspectrequestpng captionInspecting the Device Communication in the Firefox Console altInspecting the Device Communication in the Firefox Console gt Classify the relevant data and apply the JSON schema properties accordingly Use the attributes property to read and store sensor data in the case of the shutter contact our example the current window status windowOpen The attributes property is intended for readonly data such as sensor data Assign the battery status or the connection status to the event property The event property is intended for onetime events that can occur for example overheating or low battery Jos tries to find example and also include events since events are not yet well documented JSON Schema Example Shutter Contact JSON attributes quotwindowOpenquot quottypequot quotbooleanquot event quotbatteryLowquot quottypequot quotbooleanquot quottransmitErrorquot quottypequot quotbooleanquot quotstateInfoquot quottypequot quotstringquot quotradioStatequot quottypequot quotstringquot Enable reporting for the relevant attributes Jose would you enable reporting for events too eg to establish SLA statistrics JSON path attributeswindowOpen quotreportToquot quottimeseriesquot To push the shutter contact sensor data to the OLT platform via Mosquitto create an MQTT message The topic is dataingest The payload is the device type property and the current value sh mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t dataingest m 39 quottypequot quotattributesquot quotvaluequot quotwindowOpenquot true 39 V mqttv311 cafile oltcapem To push the shutter contact event data to the OLT platform via Mosquitto create a corresponding MQTT message The topic is eventingest The payload is the device type property and the current value sh mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t eventingest m 39 quottypequot quoteventquot quotvaluequot quotbatteryLowquot false 39 V mqttv311 cafile oltcapem Implement and test monitoring and alerting To allow you to emulate a device generating onetime events we provide the eventingest endpoint So to test your monitoring and alerting function instead of sending an MQTT message make an HTTP request Jos as per the API docu the type is not event but overheated or in our example batteryLow is it correct sh curl X GET quothttpsapilightelligenceiov1eventingestquot H 39Authorization Bearer TOKEN39 H 39CacheControl nocache39 H 39ContentType applicationjson39 d 39 quottypequot quoteventquot quotvaluequot quotbatteryLowquot true quotcreatedAtquot quot20180707T1150120000quot quotdeviceIdquot quot550e8400e29b11d4a716446655440000quot quotsenderIdquot quot550e8400e29b11d4a716446655440000quot As per httpsapilightelligenceiov1apicollectiontageventspaths1devices1deviceId1lasteventsget d 39 quottypequot quotoverheatedquot quotvaluequot quottemperaturequot 45 quotcreatedAtquot quot20180707T1150120000quot quotdeviceIdquot quot550e8400e29b11d4a716446655440000quot quotsenderIdquot quot550e8400e29b11d4a716446655440000quot Setting Up Alerting Monitor the connection status of your devices Procedure In the OLT portal open the device Result Under Diagnostics a diagnostics log listing invalid MQTT messages is displayed If a device doesnt send date information continuously the status Offline is displayed Alex this seems not to be the case in the devportal as of 20190412 also how am I alerted if a device fails We should have a dashboard for that tbd add screenshot clarify and verify can the interval be configured Currently we display Last Seen 1142019 135338 Diagnostics Last hour messages 125340 Device connected 125341 Device disconnected gt "},{"href":"/devices/reporting-getting-started","body":" title Storing and Retrieving Sensor Data linktitle Storing and Retrieving Sensor Data description Store sensore data in the OLT platform and simulate an application retrieving the data date 20190601 publishdate 20190601 categories devicesdata keywords reportingsensor datadevice typesattributes menu docs parent devices weight 10 weight 10 sectionsweight 10 draft false aliases devicesoverviewquickstart toc true You got started with setting up a Raspberry Pi and transmitting configuration data such as the IP address to the OLT platform See Connecting a Device in 3 Steps By walking through the process manually you got an idea of how the elements of the OLT platform interact see Walking Through the OLT Portal Step by Step Now we add a new device type to cover a typical IoT scenario Storing time series sensor data in the OLT platform and retrieving the data To do so we attach a motion sensor to the Raspberry Pi Again we provide you with a Bash script to install software and send the sensor to the OLT platform automatically The Bash script creates a device type with a JSON schema containing a property called attributes We use the configuration property in the first scenario for readwrite activities for example setting the target temperature of a thermostat The attributes property is for readonly activities its typical use case is reading sensor data Here we go Use the Bash script to set up your sensor and connect it to the OLT platform To store the sensor data in the OLT platform enable reporting Simulate an application retrieving the time series data from the OLT platform To do so make a GET request to one of the timeseries endpoints of the OLT API Setting Up Your Sensor Attach a motion sensor to your Raspberry Pi and execute a Bash script to connect it to the OLT platform Prerequisites You have connected your Raspberry Pi with the raspiansetupsh Bash script described under Connecting a Device in 3 Steps With this scenario you have installed an MQTT client Python and the Python module pahomqtt on your Raspberry You have attached a sensor to your Raspberry PiIn our example we connect a motion sensor HCSR501 PIR to GPIO pin 4 Procedure Ensure that your sensor is connected to your Raspberry Pi In our example we connect an HCSR501 PIR sensor as follows Sensor Raspberry Pi VCC VCC 5V Out GPIO Pin 4 GND Ground Under githubcomounisraspberrypideviceonboarding download the installpresencesh Bash script The script does the following Prompt you to enter your authentication token Prompt you to enter the tenant name or ID Create a device in the OLT platform and a corresponding device type Generate a device key Generate a device certificate Save a Python program presencepy in the directory created The Python program passes the sensor data to the OLT platform via MQTT messages Create a cron job to execute the Python program To execute the Bash script do the following Make it executable chmod x raspiansetupsh Execute the script raspiansetupsh On request of the Bash script do the following Enter the platform URL lightelligenceio Enter the authentication token displayed in in the OLT portal under Developer Area Enter your tenant name or your tenant ID displayed in in the OLT portal under Developer Area Result The Bash script creates a device certificate and sets up the MQTT communication Your Raspberry Pi is now sending the motion sensors data If you analyze the Bash script you see it does so by pushing updates from your device to the server via the mosquittopub command lt highlight curl gt mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t dataingest m type configuration value presence 1 V mqttv311 cafile oltcapem lt highlight gt The topic is dataingest The payload is the device type property and the current value Lets check In the OLT portal choose Devices amp Types In the Devices overview click the presence sensor the Bash script has created The latest sensor signal is displayed under Status amp Diagnosis lt figure srcimagesreportinggettingstartedstatussensorpng captionVerifying Sensor Data Is Transmitted altVerifying Sensor Data Is Transmitted gt Note that the sensor data is displayed under Attributes This corresponds to the attributes Property in the JSON schema the Bash script has created lt figure srcimagesreportinggettingstarteddisplayingjsonschemapng captionDisplaying attributes Property in the JSON Schema altDisplaying attributes Property in the JSON Schema gt Optional To verify if your sensor is actually sending data execute presencepresencepy and move the sensor 1 means the sensor is detecting motion 0 means there is no motion Enabling Reporting So far we have connected the sensor to the OLT platform That means we get the latest sensor reading But our use case is to store the sensor data in the OLT platform and retrieve times series data from the OLT platform To store the data activate reporting in the corresponding device type Procedure Open the device type in our example the device type corresponding to the motion sensor Under Reporting Rules choose Edit Insert the following reporting rule lt highlight json gt path attributespresence reportTo quottimeseriesquot lt highlight gt A reporting rule is composed of a JSON Path and a reportTo property lt figure srcimagesreportinggettingstartededitingreportingrulespng captionEditing Reporting Rules altEditing Reporting Rules gt Result Your motion sensor data is stored in the OLT platform Lets verify this in the last step Retrieving Time Series Data Simulate an application access your sensor data stored in the OLT platform To get for example the last hour of the sensors time series data make a GET request to the v1devicesdeviceIdlasttimeseries endpoint Procedure To obtain the motion sensors device ID choose Devices amp Types The ID is displayed in the device oveview lt figure srcimagesreportinggettingstarteddeviceidspng captionDisplaying Device IDs altDisplaying Device IDs gt Obtain the authentication token under Developer Area Provide the query parameter path to make the request in our example pathattributespresence Ensure that the request is URLencoded as in the following cURL example lt highlight curl gt curl X GET httpsapilightelligenceiov1devicesc42ff2fb007f4bd4ac05c4e610f34895lasttimeseriespath24attributespresence H Authorization Bearer authenticationToken H CacheControl nocache H ContentType applicationjson lt highlight gt Result Your sensor data is retrieved lt figure srcimagesreportinggettingstarteddisplayingtimeseriesdatapng captionRetrieving Time Series Data altRetrieving Time Series Data gt Note The time stamp format is Coordinated Universal Time UTC "},{"title":"Sending Actions to Devices","href":"/devices/sending-actions","body":" Turing What does Cloud To Device do What guarantees does the current solution provide What are current limitations in the implementation What does a device need to do to receive actions from the cloud How can actions be sent An action is for executables Eg Define the ambient light color with RGB LEDs Prerequisites You have performed the Getting Sensor Data In and Out of the OLT Platform scenario With this scenario you have installed an MQTT client Python and the Python module pahomqtt on your Raspberry Procedure In the OLT portal create a device type and device for the sensor attached You have the device IDs required to generate the device certificates tbd new image Attach a 4pin RGBLED to your Raspberry Pi In our example we map the GPI pins as follows LED Raspberry Pi Red GPIO Pin 23 Cathode Ground Green GPIO Pin 24 Blue GPIO Pin 25 Download our bash scipt The bash script does the following Create a directory homepirgb for the LED device certificate and a Python program to process the LED data Generate a device key Prompt you to enter the tenant name or ID Prompt you to enter the device name and ID Generate a device certificate and prompt you to copy amp paste it in the Certificates field of your Raspberry Pi device in the OLT platform Save a Python program rgbpy in the directory created The Python program passes the action data from the OLT platform to the device via MQTT messages Create a cron job to execute the Python program Generate a device certificate and prompt you to copy amp paste it in the Certificates field of your sensor device in the OLT platform Prompt you to include the required parameter in the device type associated with your motion sensor To execute the Bash script do the following Make it executable chmod x installrgbsh Execute the script installrgbsinstallrgb On request of the Bash script do the following Enter the tenant ID Enter the Raspberry PI device name or device ID Copy the Raspberry Pi device certificate and paste it into the corresponding Certificate field in the OLT portal Your Raspberry Pi is now able to receive actions from the OLT platform Adapt your LED device type so as to enable the OLT platform to receive the action data To do so in the Schema field enter the configuration parameter ipaddress ambientLight contains the color definition The color definition is composed of three values Red Green and Blue actions quotambientLightquot quottypequot quotobjectquot quotpropertiesquot quotrquot quottypequot quotstringquot quotgquot quottypequot quotstringquot quotbquot quottypequot quotstringquot Trigger an action on your device To do so make a POST request to the httpsapilightelligenceiov1devicesdeviceIdactions endpoint as in the following cURL example curl X GET quothttpsapilightelligenceiov1devices383b8c61a9c7487fb4e166fad753e546actionsquot H 39Authorization Bearer TOKEN39 H 39CacheControl nocache39 H 39ContentType applicationjson39 To light up the LED in blue use the followong message for example quotactionquot quotambientLightquot quotpayloadquot quotrquot 0 quotgquot 0 quotbquot 1 quotdescriptionquot quotSwitch on blue lightquot Result An action ID is generated quotdataquotquotactionIdquotquot5895f5f093e9428ca4b6580eb814f11equot for example The LED is switched on In our example it lights up blue lt figure srcimagessendactionrgbledpng captionTriggering an Action altTriggering an Action gt"},{"title":"Synchronizing Device Configurations","href":"/devices/synchronizing-device-configurations","body":" The config sync process is still under discussion This chapter is a placeholder Begin Notes 20190611 Jos config subject is changing fast is going to be discussed with Michael 2nd way of updating will not be implemented 420 config changes come from OLT to the adapter same logic as with actions gateway knows which adapter this device for this change belongs to gateway roots the config to the corresponding adapter adapter roots config to field device validate values and post them if changed not yet finished in SDK analogous to actions OLT routes to gateway sends action with payload info is posted to gateway that is referenced by connectdBy attribute Gateway routes to adapter Adapter routes to field device using the specific field device communication a gateway can have any number of apps in form of adapters 2 configurations for polling minimummax period and chache value that can be set for every attribute eventbased As for Config update 1 subscribe it to the devicesdeviceIdconfiguration topic 2 To actually trigger the configuration change implement a PATCH request to the devicesdeviceId endpoint When gateway has an adapter and the adapter creates a device When I write an adapter I make calls only to the gateway Gateway has 2 API HTTP MQTT a kind of mini OLT runs in the Gateays acts as a filter man in th emiddle to decide what gets posted and to route information back gateway needs adapter only adapter can route action back to the device The Adapter can talk to both the gateway and the field protocol it manages Eg BLE adapter if config change in gateway gateway knows the device corresponds to BLE adapter sends config update to adapter adapter passes the configuration to the device and reports back to OLT to acknowledge that config has actually changed On creating a device I get an MQQT configuration update message at the gateway with the configuration used to create the device Then this config update message is processed as if it had been received later by just parsing the configuration by the appropriate processing and then the ackknowledgement End Notes 20190611 Lets now change configuration data in the following example a thermostats target temperature The associated device type property is configuration You employed it to read network and sensor data when you connected your first device see Connecting a Device in 3 Steps A configuration change is bidirectional In our example write a new target temperature to the device And we read the configuration to verify changes or monitor the configuration Synchronizing Configuration Data Jose our virtual adapter implements two ways to change configuration data Send either start or stop update action to the device in this case startstop incrementing a counter generated in lieu of sensor data for example stop value not incremented and not posted or Write new config value update values to the device in OLT then send action to reload config action it will grab the config from OLT and adapt adapter behavior Jos Is there a realworld use case behind the alternative Procedure Inspect the device communication Use for example the Firefox console CrtlShiftK to inspect the HTTP requests the devices web client sends to the device The following example inspects the status and configuration of a thermostat and a shutter contact controlled by a gateway lt figure srcimagesdevicetypeinspectrequestpng captionInspecting the Device Communication in the Firefox Console altInspecting the Device Communication in the Firefox Console gt In the OLT portal create the device type Classify the relevant data and apply the JSON schema properties accordingly Use the attributes property to read and store sensor data in our example the current temperature currentAutoTemperature You are familiar with the attributes property from the Storing and Retrieving Sensor Data in 3 Steps scenario Assign the target temperature to the configuration property Define for example a setPointTemperature property The configuration property is intended for readwrite data Assign the battery status or the connection status for example to the event property You are familiar with the event property from the Monitoring Devices and Alerting scenario tbd event is currently fixed type eg overheated its under discussion JSON Schema Example Thermostat JSON quotattributesquot quotcurrentAutoTemperaturequot quottypequot quotnumberquot quotconfigurationquot quotsetPointTemperaturequot quottypequot quotnumberquot quottemperatureOffsetquot quottypequot quotnumberquot quoteventquot quotbatteryLowquot quottypequot quotbooleanquot quottransmitErrorquot quottypequot quotbooleanquot quotstateInfoquot quottypequot quotstringquot quotradioStatequot quottypequot quotstringquot 2 Enable reporting for the relevant attributes Joswould one also write the events to the database in our case the battery status quotand event propertiesquot Jos if it makes sense to store event data would I define the reporting rule the same way as with attributes events are under discussion not yet clear what granularity we need for the timeseries JSON quotpathquot quotattributescurrentAutoTemperaturequot quotreportToquot quottimeseriesquot quotpathquot quoteventbatteryLowquot quotreportToquot quottimeseriesquot 3 Implement a process to store and retrieve the sensor data and process event data To write new configuration to the device in our example set the target temperature to 21 do the following To enable your thermostat to receive configuration updates subscribe it to the devicesdeviceIdconfiguration topic sh mosquittosub h mqttlightelligenceio p 8883 cafile oltcapem cert devicecertpem key devicekeypem V quotmqttv311quot t 39devicesdeviceIdconfiguration39 d The thermostat now listens for configuration changes To actually trigger the configuration change implement a PATCH request to the devicesdeviceId endpoint Your request contains the configuration name and its payload in the request body in our example setPointTemperature and the new target temperature 21 sh curl X PATCH httpsapilightelligenceiov1devicesdeviceId H Authorization Bearer TOKEN H CacheControl nocache H ContentType applicationjson d configuration quotsetPointTemperaturequot 21 Result When you39ve performed the device configuration change on your device you receive an MQTT message similar to the following tbd verify json quotdeviceIdquot quotdeviceIdquot quotconfigurationquot quotsetPointTemperaturequot 21 This updates your device39s internal configuration according to its digital twin in the cloud Implement a process to verify the configuration change To do so use an MQTT message to the dataingest topic The process is analogous to processing sensor data as described under Storing and Retrieving Sensor Data mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t dataingest m 39 quottypequot quotconfigurationquot quotvaluequot quotsetPointTemperaturequot setPointTemperature 39 V mqttv311 cafile oltcapem Note Quality of Service QoS The OLT platform supports the QoS levels 0 and 1 Jos In case of actions and config changes Problem How the device acknowledge the change why would we use a reload confic action instead of sending an MQTT message to the dataingest topic as above So use action to be included in the SDK as a standard feature ReloadConfiguration Re Adapter reads new configuration from OLT and do changes accordingly request to the devicesdeviceIDactions endpoint Example sh curl X POST httpsapilightelligenceiov1devicesb3ec0d146ad54dbd90eebe019b1aae62actions H 39Accept applicationjson39 H 39ContentType applicationjson39 H 39PostmanToken b09d74b9063d47a68d77af558045b0d439 H 39cachecontrol nocache39 d 39 quotactionquot quotReloadConfigurationquot quotpayloadquot "},{"title":"Understanding MQTT","href":"/devices/understanding-mqtt","body":"Under Getting Started you have learned how to create certificates and associate them to the tenant and device connect to the platform via MQTT verify that the data has actually been received Additional Information Turing General How do I manage certificates what are the limitations Why can there be more than one certificate per device How do I rotate certificates When I connect to the platform via MQTT what role to parameters like QoS and KeepAlive play What client libraries do we recommend Processes How can I send attributes configuration and events to the platform How can I verify that the data has actually been received link to API docu How can I debug if the data is not showing up "},{"title":"Testing Shortcodes 2","tags":["shortcodes"],"href":"/getting-started/Testing-Shortcodes","body":"Todo todo Text in the todo shortcode is not rendered in HTML todo Syntax Highlighting As markdown js gruntinitConfig assemble options assets 39docsassets39 data 39srcdatajsonyml39 helpers 39srccustomhelpersjs39 partials 39srcpartialshbsmd39 pages options layout 39defaulthbs39 files 3939 39srctemplatespagesindexhbs39 php php color red echo My car is color echo My house is COLOR echo My boat is coLOR Code Toggle 1 lt codetoggle fileconfig gt googleAnalytics UA12345 lt codetoggle gt 2 lt divshortcode fileconfig gt test lt divshortcode gt 3 With shortcode code to display copy to clipboard button Requires file name to show copytoclipboard button lt code filelayoutspartialsrelatedhtml gt lt code filelayoutspartialsrelatedhtml gt code With shortcode highlight lt note gt The shortcode highlight requires a language to be specifiedlt note gt lt note gt The shortcode highlight requires eg curl as language attribute toallow to indicate line breaks in a command lt note gt lt highlight curl gt mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t dataingest lt highlight gt lt highlight sh gt highlight sh for example lt highlight gt lt highlight json gt JSON for example lt highlight gt JSON lt highlight json gt data id 72fac0d5fe3245998f9ca033e42faaa9 email JohnDoeexamplecom firstName John lastName Doe userRoles id 3100bdf890d9471d86aef7ba9eff0a86 name owner displayName Owner description Default owner role with full access to all resources locked true lt highlight gt JAVA lt highlight java gt var token TOKEN var tenantId tenantId var userId userId var apiUrl httpsapilightelligenceiov1tenants tenantId users userId var headers Authorization Bearer token CacheControl nocache ContentType applicationjson lt highlight gt With numbered lines Note the border disappears and the block doent expand on hovering over it lt highlight java linenostablelinenostart1 gt var token TOKEN var tenantId tenantId var userId userId var apiUrl httpsapilightelligenceiov1tenants tenantId users userId var headers Authorization Bearer token CacheControl nocache ContentType applicationjson lt highlight gt cURL lt highlight cURL gt curl X GET httpsapilightelligenceiov1usersuserIdtenants H Authorization Bearer TOKEN H CacheControl nocache H ContentType applicationjson lt highlight gt Notes Note with lthrgt List item 1 Note Note text List item m Notes normal note Lazy Blogger If all you want is a simple menu for your sections see the Section Menu for Lazy Bloggers in Menu Templates note Note in list as table List item 1 noteinlist Tip If all you want is a simple link see Link But with Inner markdownify it wont work The note text is highlighted as code With Inner the layout is OK but the link and the bold characters are not renderedmarkdownified noteinlist List item 2 Note in list with horizontal rule List item 1 noteinlisthr Tip If all you want is a simple link see Link But with Inner markdownify it wont work The note text is highlighted as code With Inner the layout is OK but the link and the bold characters are not renderedmarkdownified noteinlisthr List item 2 Note as table not indented noteinlist Tip If not indented the note layout and markdown is fine If all you want is a simple link see Link noteinlist Builtin note shortcode note The builtin note shortcode note Code Code in Normal Text lt code filehttpsapilightelligenceiov1apicollectiontaguserspaths1users1userIdget gt some sample code lt code gt Code in List Lorem lt code filelayoutspartialsrelatedhtml gt some sample code lt code gt Ipsum Setting Up Your Raspberry Pi Prerequisites You have a Raspberry Pi with an SD card an SD card reader myshortcode colorblue This quick start uses macOS in the examples For instructions about how to install Hugo on other operating systems see install It is recommended to have Git installed to run this tutorial myshortcode Procedure List item 1 Text before quote block Quote block in list item 1 Text after quote block List item 2 Text before quote block Quote block in list item 2 Text after quote block List item 3 Text before quote block Quote block in list item 3 Text after quote block Lorem ipsum dolor sit amet consetetur sadipscing elitr tip Test tip Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat At vero eos et accusam et justo duo dolores et ea rebum Stet clita kasd gubergren no sea takimata sanctus est Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat At vero eos et accusam et justo duo dolores et ea rebum Stet clita kasd gubergren no sea takimata sanctus est Lorem ipsum dolor sit amet Treas em wankeing ont sime ploked peish rof phen sumbloat syug si phat phey gavet peish ta paat ein pheeir sumbloats note Standard Hugo Note note Lorem ipsum dolor sit amet consetetur sadipscing elitr lt highlight javascript gt Some code lt highlight gt Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr Choose Register and enter data as required In the email you receive activate your account You go to the Welcome page lt figure srcimagesgettingstartedwelcomepng captionWelcome to the LIGHTELLIGENCE Portal altWelcome to the LIGHTELLIGENCE Portal gt Choose Create Tenant Choose the Free Starter plan and enter data as required Note You need a tenant name or ID in the subsequent process To test the OLT platform within the free plan for the sake of our example enter some random data To create an actual account familiarize yourself with the multitenancy concept and create multiple tenants if required For more information see Creating Tenants The tenant is created lt figure srcquotimagesuserscreatetenantresultpngquot captionquotCreating a Tenant Resultquot altquotCreating a Tenant Resultquot gt Choose Login with new tenant lt code filelayoutspartialsrelatedhtml gt related SiteRegularPagesRelated first 5 with related See Also range Title end end lt code gt Result Your physical device is running and ready to get connected to the OLT platform noteinlist This quick start uses macOS in the examples For instructions about how to install Hugo on other operating systems see install It is recommended to have Git installed to run this tutorial lt figure srcimagesgettingstartedwelcomepng captionWelcome to the LIGHTELLIGENCE Portal altWelcome to the LIGHTELLIGENCE Portal gt noteinlist Step 1 Install Hugo note Homebrew a package manager for macOS can be installed from brewsh See install if you are running Windows etc note To verify your new install bash hugo version"},{"title":"Getting Started","href":"/getting-started/_index","body":"Todo todo Text in the todo shortcode is not rendered in HTML todo Syntax Highlighting As markdown js gruntinitConfig assemble options assets 39docsassets39 data 39srcdatajsonyml39 helpers 39srccustomhelpersjs39 partials 39srcpartialshbsmd39 pages options layout 39defaulthbs39 files 3939 39srctemplatespagesindexhbs39 php php color red echo My car is color echo My house is COLOR echo My boat is coLOR Code Toggle 1 lt codetoggle fileconfig gt googleAnalytics UA12345 lt codetoggle gt 2 lt divshortcode fileconfig gt test lt divshortcode gt 3 With shortcode code to display copy to clipboard button Requires file name to show copytoclipboard button lt code filelayoutspartialsrelatedhtml gt lt code filelayoutspartialsrelatedhtml gt code With shortcode highlight lt note gt The shortcode highlight requires a language to be specifiedlt note gt lt note gt The shortcode highlight requires eg curl as language attribute toallow to indicate line breaks in a command lt note gt lt highlight curl gt mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t dataingest lt highlight gt lt highlight sh gt highlight sh for example lt highlight gt lt highlight json gt JSON for example lt highlight gt JSON lt highlight json gt data id 72fac0d5fe3245998f9ca033e42faaa9 email JohnDoeexamplecom firstName John lastName Doe userRoles id 3100bdf890d9471d86aef7ba9eff0a86 name owner displayName Owner description Default owner role with full access to all resources locked true lt highlight gt JAVA lt highlight java gt var token TOKEN var tenantId tenantId var userId userId var apiUrl httpsapilightelligenceiov1tenants tenantId users userId var headers Authorization Bearer token CacheControl nocache ContentType applicationjson lt highlight gt With numbered lines Note the border disappears and the block doent expand on hovering over it lt highlight java linenostablelinenostart1 gt var token TOKEN var tenantId tenantId var userId userId var apiUrl httpsapilightelligenceiov1tenants tenantId users userId var headers Authorization Bearer token CacheControl nocache ContentType applicationjson lt highlight gt cURL lt highlight cURL gt curl X GET httpsapilightelligenceiov1usersuserIdtenants H Authorization Bearer TOKEN H CacheControl nocache H ContentType applicationjson lt highlight gt Notes Note with lthrgt List item 1 Note Note text List item m Notes normal note Lazy Blogger If all you want is a simple menu for your sections see the Section Menu for Lazy Bloggers in Menu Templates note Note in list as table List item 1 noteinlist Tip If all you want is a simple link see Link But with Inner markdownify it wont work The note text is highlighted as code With Inner the layout is OK but the link and the bold characters are not renderedmarkdownified noteinlist List item 2 Note in list with horizontal rule List item 1 noteinlisthr Tip If all you want is a simple link see Link But with Inner markdownify it wont work The note text is highlighted as code With Inner the layout is OK but the link and the bold characters are not renderedmarkdownified noteinlisthr List item 2 Note as table not indented noteinlist Tip If not indented the note layout and markdown is fine If all you want is a simple link see Link noteinlist Builtin note shortcode note The builtin note shortcode note Code Code in Normal Text lt code filehttpsapilightelligenceiov1apicollectiontaguserspaths1users1userIdget gt some sample code lt code gt Code in List Lorem lt code filelayoutspartialsrelatedhtml gt some sample code lt code gt Ipsum Setting Up Your Raspberry Pi Prerequisites You have a Raspberry Pi with an SD card an SD card reader myshortcode colorblue This quick start uses macOS in the examples For instructions about how to install Hugo on other operating systems see install It is recommended to have Git installed to run this tutorial myshortcode Procedure List item 1 Text before quote block Quote block in list item 1 Text after quote block List item 2 Text before quote block Quote block in list item 2 Text after quote block List item 3 Text before quote block Quote block in list item 3 Text after quote block Lorem ipsum dolor sit amet consetetur sadipscing elitr tip Test tip Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat At vero eos et accusam et justo duo dolores et ea rebum Stet clita kasd gubergren no sea takimata sanctus est Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat At vero eos et accusam et justo duo dolores et ea rebum Stet clita kasd gubergren no sea takimata sanctus est Lorem ipsum dolor sit amet Treas em wankeing ont sime ploked peish rof phen sumbloat syug si phat phey gavet peish ta paat ein pheeir sumbloats note Standard Hugo Note note Lorem ipsum dolor sit amet consetetur sadipscing elitr lt highlight javascript gt Some code lt highlight gt Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr Lorem ipsum dolor sit amet consetetur sadipscing elitr Choose Register and enter data as required In the email you receive activate your account You go to the Welcome page lt figure srcimagesgettingstartedwelcomepng captionWelcome to the LIGHTELLIGENCE Portal altWelcome to the LIGHTELLIGENCE Portal gt Choose Create Tenant Choose the Free Starter plan and enter data as required Note You need a tenant name or ID in the subsequent process To test the OLT platform within the free plan for the sake of our example enter some random data To create an actual account familiarize yourself with the multitenancy concept and create multiple tenants if required For more information see Creating Tenants The tenant is created lt figure srcquotimagesuserscreatetenantresultpngquot captionquotCreating a Tenant Resultquot altquotCreating a Tenant Resultquot gt Choose Login with new tenant lt code filelayoutspartialsrelatedhtml gt related SiteRegularPagesRelated first 5 with related See Also range Title end end lt code gt Result Your physical device is running and ready to get connected to the OLT platform noteinlist This quick start uses macOS in the examples For instructions about how to install Hugo on other operating systems see install It is recommended to have Git installed to run this tutorial lt figure srcimagesgettingstartedwelcomepng captionWelcome to the LIGHTELLIGENCE Portal altWelcome to the LIGHTELLIGENCE Portal gt noteinlist Step 1 Install Hugo note Homebrew a package manager for macOS can be installed from brewsh See install if you are running Windows etc note To verify your new install bash hugo version"},{"title":"Recapulating Basic Concepts","tags":["tenant","device type","device"],"href":"/getting-started/basic-concepts","body":"Understanding the Concepts You now know some basic concepts A tenant owns the physical devices in an IoT system landscapes You create a tenant by registering to the OLT platform A device type describes the capabilities of a class of devices which data they can exchange with the OLT platform You can create and edit device types for device classes such as sensors actors or gateways in the OLT portal Or create it with an HTTP request to the OLT API as our Bash script does A device is a digital twin of a physical device representing it in the OLT platform with the properties defined in the corresonding device type You can create and edit device types and display their status in the OLT Portal Or create them with HTTP requests as in our Bash script Practicing To learn whats under the hood when you execute the Bash script perform the steps manually Go to Walking Through the OLT Portal Step by Step "},{"title":"Walking Through the OLT Portal, Step by Step","tags":["configuration","Device Type","MQTT","Device Certificate","Mosquitto Client"],"href":"/getting-started/connectivity-getting-started","body":"In the first scenario our Bash script connects an existing device to the OLT platform automatically in our example a Raspberry Pi Now we describe how you would connect a device manually The process gives you an idea of the components of a solution especially how we guarantee secure communication an overview of the OLT portal functions The OLT platform talks MQTT with the devices attached so we want to achieve that your device exchanges MQTT messages with the OLT platform To verify the connection works youll send a sample MQTT message to the OLT platform manually The process does the the same as our Bash script Creating a Device Type The following procedure is equivalent to the POST request to the devicetypes endpoint in our Bash script Procedure Log on to the OLT portal Click the tenant you have created Under Devices amp Types choose Device Types Choose Create Device Type Enter data as required In our example enter Raspberry Pi as the device type name Choose Proceed to Parameters In the Configurations Attributes and Actions field add the following sample configuration parameter ipaddress Note Ignore the Reporting Rules field for now We will deal with it in the Storing and Retrieving Sensor Data scenario lt highlight JSON gt attributes configuration quotipaddressquot quottypequot quotstringquot actions lt highlight gt lt figure srcimagesdevicetypeschemapng captionDefining a Device Type Schema altDefining a Device Type Schema gt To confirm choose Create Device Type The device type is displayed on the Device Types tab At the moment the content doesnt matter We just need any device type Creating a Device In the OLT platform create a digital twin of your device based on the device type created The following procedure is equivalent to the POST request to the devices endpoint in our Bash script Procedure Under Devices amp Types Devices choose Create Device Select the device type you have created under Creating a Device Type and choose Proceed to Device Describe the device In our example enter Raspberry Pi as the device name Note In a production system metadata like name location description and tags help you to monitor and maintain the devices in your system landschape For more information see Managing Devices To confirm choose Create Device Choose Skip Why skip You dont have a device certificate yet Youll create it in the next step and perform the skipped step later under Register the Device To the OLT Platform But to create the device certificate you need the device name or ID in the first place Result The device name and ID are displayed lt figure srcimagesdeviceidpng captionDisplaying the Device ID altDisplaying the Device ID gt Generating a Device Certificate Create a unique SSLTLS client certificate for your device During the TLS handshake between your device and the platform the platform uses the device certificate to identify and authenticate your device In our example use the OpenSSL command line utility to create a selfsigned device certificate for your Raspberry PI The following procedure is equivalent to the POST request to the devices endpoint in our Bash script Procedure Create a directory in which to create the device certificate To create a private key to sign the device certificate to be generated execute openssl ecparam out devicekeypem name prime256v1 genkey A file called devicekeypem containing the private key is in your directory Create a device certificate and sign it with the private key generated Proceed as follows Obtain the following information Look up the tenant ID under Developer Area or the tenant name on the Tenant Selection page lt figure srcimagestenantidpng captionDisplaying the Tenant ID in the Developer Area altDisplaying the Tenant ID in the Developer Area gt Look up the device name or the device ID displayed under Devices amp Types Devices Use the subj parameter to insert the information in the following command openssl req new key devicekeypem x509 days 365 out devicecertpem subj 39OltTenant IDgtCNltDevice IDgt39 and execute the command Example req new key devicekeypem x509 days 365 out devicecertpem subj 39OSampleTenantCNSampleDevice39 Result Thats it The device certificate is in your directory lt figure srcimagesdevicecertificatepng captionDisplaying the Device Certificate altDisplaying the Device Certificate gt Registering the Device to the OLT Platform Enter the device certificate you have created under Generating a Device Certificate Procedure Open the device certificate In the OLT portal paste the device certificate content into the Certificates field lt figure srcimagesdevicecertificatepastingpng captionAdding the Device Certificate altAdding the Device Certificate gt To confirm choose Save Result The device is registered to the OLT platform The device certificate status is displayed lt figure srcimagesdevicecertificatevalidpng captionDisplaying the Device Certificate Status altDisplaying the Device Certificate Status gt Congrats Your device is now able to talk to OLT platform Turning Your Device into a Mosquitto Client The OLT platform talks MQTT Message Queue Telemetry Transport So next you turn your device into an MQTT client To establish the connection to the cloud install Mosquitto for example Procedure To install Mosquitto follow the guidelines for your operation system under httpswwweclipseorgmosquittodownload Copy and paste the certificate below into a file named oltcapem and you are ready to go lt code filegettingstartedconnectivitygettingstarted gt todo file link to our script repo todo BEGIN CERTIFICATE MIICBzCCAaygAwIBAgIBADAKBggqhkjOPQQDAjBcMQswCQYDVQQGEwJERTEOMAwG A1UEChMFT1NSQU0xDDAKBgNVBAsTA09MVDEvMC0GA1UEAxMmT1NSQU0gT0xUIERl dmljZVNlcnZpY2VzIFRydXN0QW5jaG9yIDEwIBcNMTgwNjEyMTU1NTMwWhgPMjA1 ODA2MTIxNTU1MzBaMFwxCzAJBgNVBAYTAkRFMQ4wDAYDVQQKEwVPU1JBTTEMMAoG A1UECxMDT0xUMS8wLQYDVQQDEyZPU1JBTSBPTFQgRGV2aWNlU2VydmljZXMgVHJ1 c3RBbmNob3IgMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABIRHefdjW8eKPEpi RV88sqk7nqOIDdg4v2KcIsX8LQD94YGkDEDO4Alg3EdtibTXMtztbSiRMmyBeB 7FmbrKjXTBbMB0GA1UdDgQWBBQmEJ8uurFfHaFxDYw1oeYNu1M6TAfBgNVHSME GDAWgBQmEJ8uurFfHaFxDYw1oeYNu1M6TAMBgNVHRMEBTADAQHMAsGA1UdDwQE AwIBBjAKBggqhkjOPQQDAgNJADBGAiEA1dAeBWcIDUyOzuQSzhO0cajg3mZfiHp NwryIKRR9fgCIQDKqKmKv1STjPEePu4NL2YEqsVauaVl4CVQIYVjEwN3cw END CERTIFICATE code Ensure that the following files are in your Mosquitto directory devicecertpem devicekeypem oltcapem Verifying Your Device Can Communicate with the OLT Platform Send a message from your device to the OLT platform Under Creating a Device Type you have defined a device type schema specifying a configuration parameter called ipaddress whose data type is string Via an MQTT message send a random IP address 19216811 for example Then check whether the IP address has actually been sent to the OLT platform Procedure To change the configuration in the OLT platform enter the following command lt highlight curl gt mosquittopub h mqttlightelligenceio p 8883 cert devicecertpem key devicekeypem d t dataingest m type configuration value ipaddress 19216811 V mqttv311 cafile oltcapem lt highlight gt The command is composed of the following components mqttlightelligenceio is the address of the OLT platform you want to connect to mqttv311 is the protocol to be used cafile is the OLT certificate of the Certificate Authority that has issued the TLS certificate of the OLT platforms MQTT service quottypequot quotconfigurationquot quotvaluequot quotipaddressquot quot19216811quot is the MQTT message containing the configuration change you want to publish for your device Result Your output is similar to the one below lt highlight curl gt Client mosqpub9736W541 sending CONNECT Client mosqpub9736W541 received CONNACK Client mosqpub9736W541 sending PUBLISH d0 q0 r0 m1 dataingest 51 bytes Client mosqpub9736W541 sending DISCONNECT lt highlight gt lt figure srcimagesmosquittopubconfigurationwindowspng captionSending an MQTT Message altSending an MQTT Message gt The updated configuration is displayed in the OLT portal under Status amp Diagnostics lt figure srcimagesmosquittopubconfigurationresultpng captionDisplaying the Updated Configuration altDisplaying the Updated Configuration gt Result Congrats You have connected your device to the OLT platform You have a detailed idea of our Bash script enabled your Raspberry PI to talk with the OLT platform via encrypted messages"},{"title":"Connecting a Device in 3 Steps","tags":null,"href":"/getting-started/setting-up-getting-started","body":"A Raspberry Pi is an ideal companion for the first steps on your journey Connect a Raspberry Pi to the OLT platform in three easy steps Flash an operating system onto a Raspberry Pi In the OLT portal register to the OLT platform Let a Bash script connect your Raspberry PI to the OLT platform and let and display the temperature and the IP address the Raspberry Pi transmits to the OLT platform By performing the required activities in the OLT portal and by analyzing what the Bash script does you get a basic technical idea of the OLT concepts and mode of operation orientation in the OLT portal Setting Up Your Raspberry Pi Prerequisites You have a Raspberry Pi with an SD card an SD card reader Procedure Under raspberrypiorgdownloadsraspbian download the Raspbian Stretch with desktop and recommended software image and unzip it With a tool like Etcher flash the image to an SD card Put the SD card into your Raspberry PI and power on Adjust the settings and restart Skip the software updates that would take a while Result Your physical device is running and ready to get connected to the OLT platform Registering to the OLT platform and Creating a Tenant Create a test tenant in our free plan You just need an email address Procedure Go to the OLT portal under httpsportallightelligenceio Choose Register and enter data as required In the email you receive activate your account You go to the Welcome page lt figure srcimagesgettingstartedwelcomepng captionWelcome to the LIGHTELLIGENCE Portal altWelcome to the LIGHTELLIGENCE Portal gt Choose Create Tenant Choose the Free Starter plan and enter data as required Note You need a tenant name or ID in the subsequent process To test the OLT platform within the free plan for the sake of our example enter some random data To create an actual account familiarize yourself with the multitenancy concept and create multiple tenants if required For more information see Creating Tenants The tenant is created lt figure srcimagesuserscreatetenantresultpng captionCreating a Tenant Result altCreating a Tenant Result gt Choose Login with new tenant Result Via the Lightelligence portal you have access to the OLT platform A user is created by default Connecting Your Raspberry Pi to the OLT platform With a Bash Script As a tenant you can obtain the information required to connect your Raspberry Pi Procedure Log on to your Raspberry PI and start a Web browser Under githubcomounisraspberrypideviceonboarding download the raspbiansetupsh Bash script To establish communication with the OLT platform the Bash script does the following Install the MQTT broker Mosquitto Install Python to process sensor and network data Install the Python module pahomqtt to pass the Python data to Mosquitto To execute the Bash script do the following Make it executable chmod x raspiansetupsh Execute it raspiansetupsh You are prompted to enter some information As the platform URL enter lightelligenceio To obtain the API authentication token do the following Log on to the OLT portal Click the tenant you have created lt figure srcimagesgettingstartedselecttenantpng captionSelecting a Tenant altSelecting a Tenant gt Under Developer Area copy the authentication token lt figure srcimagesgettingstarteddisplaydeveloperareapng captionDisplaying the Developer Area altDisplaying the Developer Area gt Enter your tenant name Alternatively under Developer Area copy the tenant ID Specify the network interface If you have connected the Raspberry Pi via WiFi enter WLAN0 If you have connected it via ethernet enter eth0 Result With these 3 steps your Rasperry Pi is connected to the OLT portal sending data Lets check it In the OLT portal choose Devices amp Types gt Devices lt figure srcimagesgettingstartedselectdevicepng captionDisplaying the Devices Overview altDisplaying the Devices Overview gt Click the Raspberry Pi that the Bash script has created Device information and the device status are displayed Under Configuration the temperature and ip address sent by your Raspberry are displayed lt figure srcimagesgettingstarteddisplaystatusandconfigurationpng captionDisplaying the Device Connection Status and Configuration altDisplaying the Device Status and Configuration gt Understanding Device Types The Configuration corresponds to a property of a socalled device type The Bash script has created the device type It describes the capabilities of your device In our example the capabilities of the Raspberry Pi are to have a temperature and an IP address Lets check To display the device type In the OLT portal choose Choose Devices amp Types gt Device Types You go to the device types overview lt figure srcimagesgettingstartedselectdevicetypepng captionDisplaying the Device Types Overview altDisplaying the Device Types Overview gt Click the Raspberry Pi device type that the Bash script has created Under Device Type Information you find attributes to define device classes Under Schema the JSON schema containing the configuration properties is displayed It defines the paddress and the temperature as configuration properties lt figure srcimagesgettingstartededitdisplaytypeschemapng captionDisplaying the Device Type Schema altDisplaying the Device Type Schema gt In the Managing the OLT Lifecycle chapter of this documentation you will learn how define device types to map your specific IoT system landscape Note Ignore the Reporting Rules field for now We will deal with it in the Storing and Retrieving Sensor Data scenario "},{"title":"Tracking Changes","href":"/maintenance/_index","body":""},{"title":"Lightelligence Release Notes","href":"/news/_index","body":""},{"title":"readdirs Directory for Reusable Content","href":"/readfiles/README","body":"readdirs Directory for Reusable Content Files in this directory are Used in more than one place within the Hugo docs Used in Examples of readdir ie in local file templates These files are called using the readfile shortcode source You can call this shortcode in the docs as follows readfile filepathtofiletxt markdowntrue markdownquottruequot is optional default quotfalsequot and parses the string through the Blackfriday renderer"},{"href":"/readfiles/bfconfig","body":"Blackfriday Options taskLists default true Blackfriday flag Purpose false turns off GitHubstyle automatic taskTODO list generation smartypants default true Blackfriday flag HTMLUSESMARTYPANTS Purpose false disables smart punctuation substitutions including smart quotes smart dashes smart fractions etc If true it may be finetuned with the angledQuotes fractions smartDashes and latexDashes flags see below smartypantsQuotesNBSP default false Blackfriday flag HTMLSMARTYPANTSQUOTESNBSP Purpose true enables French style Guillemets with nonbreaking space inside the quotes angledQuotes default false Blackfriday flag HTMLSMARTYPANTSANGLEDQUOTES Purpose true enables smart angled double quotes Example Hugo renders to Hugo instead of Hugo fractions default true Blackfriday flag HTMLSMARTYPANTSFRACTIONS Purpose false disables smart fractions Example 512 renders to 5frasl12ltsupgt5ltsupgtampfraslltsubgt12ltsubgt Caveat Even with fractions false Blackfriday still converts 12 14 and 34 respectively to ampfrac12 ampfrac14 and ampfrac34 but only these three smartDashes default true Blackfriday flag HTMLSMARTYDASHES Purpose false disables smart dashes ie the conversion of multiple hyphens into an endash or emdash If true its behavior can be modified with the latexDashes flag below latexDashes default true Blackfriday flag HTMLSMARTYPANTSLATEXDASHES Purpose false disables LaTeXstyle smart dashes and selects conventional smart dashes Assuming smartDashes If true is translated into ndash ampndash whereas is translated into mdash ampmdash However spaced single hyphen between two words is translated into an ennbspdashmdash eg 12 June 3 July becomes 12 June ampndash 3 July upon rendering hrefTargetBlank default false Blackfriday flag HTMLHREFTARGETBLANK Purpose true opens external links absolute links in a new window or tab While the targetquotblankquot attribute is typically used for external links Blackfriday does that for all absolute links ref One needs to make note of this if they use absolute links throughout for internal links too for example by setting canonifyURLs to true or via absURL nofollowLinks default false Blackfriday flag HTMLNOFOLLOWLINKS Purpose true creates external links absolute links with nofollow being added to their rel attribute Thereby crawlers are advised to not follow the link While the relquotnofollowquot attribute is typically used for external links Blackfriday does that for all absolute links One needs to make note of this if they use absolute links throughout for internal links too for example by setting canonifyURLs to true or via absURL noreferrerLinks default false Blackfriday flag HTMLNOREFERRERLINKS Purpose true creates external links absolute links with noreferrer being added to their rel attribute Thus when following the link no referrer information will be leaked While the relquotnoreferrerquot attribute is typically used for external links Blackfriday does that for all absolute links One needs to make note of this if they use absolute links throughout for internal links too for example by setting canonifyURLs to true or via absURL plainIDAnchors default true Blackfriday flag FootnoteAnchorPrefix and HeaderIDSuffix Purpose true renders any heading and footnote IDs without the document ID Example renders myheading instead of myheadingbec3ed8ba720b970 extensions default Purpose Enable one or more Blackfridays Markdown extensions EXTENSION Example Include hardLineBreak in the list to enable Blackfridays EXTENSIONHARDLINEBREAK See Blackfriday extensions section for information on all extensions extensionsmask default Purpose Disable one or more of Blackfridays Markdown extensions EXTENSION Example Include autoHeaderIds as false in the list to disable Blackfridays EXTENSIONAUTOHEADERIDS See Blackfriday extensions section for information on all extensions skipHTML default false Blackfriday flag HTMLSKIPHTML Purpose true causes any HTML in the markdown files to be skipped Blackfriday extensions noIntraEmphasis default enabled Purpose The character is commonly used inside words when discussing code so having Markdown interpret it as an emphasis command is usually the wrong thing When enabled Blackfriday lets you treat all emphasis markers as normal characters when they occur inside a word tables default enabled Purpose When enabled tables can be created by drawing them in the input using the below syntax Example Name Age Bob 27 Alice 23 fencedCode default enabled Purpose When enabled in addition to the normal 4space indentation to mark code blocks you can explicitly mark them and supply a language to make syntax highlighting simple You can use 3 or more backticks to mark the beginning of the block and the same number to mark the end of the block Example md Heading Level 1 Some test Heading Level 2 Some more test autolink default enabled Purpose When enabled URLs that have not been explicitly marked as links will be converted into links strikethrough default enabled Purpose When enabled text wrapped with two tildes will be crossed out Example crossedout laxHtmlBlocks default disabled Purpose When enabled loosen up HTML block parsing rules spaceHeaders default enabled Purpose When enabled be strict about prefix header rules hardLineBreak default disabled Purpose When enabled newlines in the input translate into line breaks in the output tabSizeEight default disabled Purpose When enabled expand tabs to eight spaces instead of four footnotes default enabled Purpose When enabled Pandocstyle footnotes will be supported The footnote marker in the text that will become a superscript text the footnote definition will be placed in a list of footnotes at the end of the document Example This is a footnote1 1 the footnote text noEmptyLineBeforeBlock default disabled Purpose When enabled no need to insert an empty line to start a code quote ordered list unordered list block headerIds default enabled Purpose When enabled allow specifying header IDs with id titleblock default disabled Purpose When enabled support Pandocstyle title blocks autoHeaderIds default enabled Purpose When enabled autocreate the header IDs from the headline text backslashLineBreak default enabled Purpose When enabled translate trailing backslashes into line breaks definitionLists default enabled Purpose When enabled a simple definition list is made of a singleline term followed by a colon and the definition for that term Example Cat Fluffy animal everyone likes Internet Vector of transmission for pictures of cats Terms must be separated from the previous definition by a blank line joinLines default enabled Purpose When enabled delete newlines and join the lines"},{"href":"/readfiles/dateformatting","body":"Go templates format your dates according to a single reference time Mon Jan 2 150405 MST 2006 You can think of MST as 07 thus making the reference format string a sequence of numbers The following is taken directly from the Go docs Jan 2 150405 2006 MST 1 2 3 4 5 6 7 Hugo Date Templating Reference Each of the following examples show the reference formatting string followed by the string Hugo will output in your HTML Note that the examples were rendered and tested in CST and pull from a single example date you might have in your contents front matter date 20170303T1415590600 Date ie called via page variable Returns 20170303 141559 0600 CST quotMonday January 2 2006quot Returns Friday March 3 2017 quotMon Jan 2 2006quot Returns Fri Mar 3 2017 quotJanuary 2ndquot Returns March 3rd quotJanuary 2006quot Returns March 2017 quot20060102quot Returns 20170303 quotMondayquot Returns Friday quot02 Jan 06 1504 MSTquot RFC822 Returns 03 Mar 17 1415 CST quot02 Jan 06 1504 0700quot RFC822Z Returns 03 Mar 17 1415 0600 quotMon 02 Jan 2006 150405 MSTquot RFC1123 Returns Fri 03 Mar 2017 141559 CST quotMon 02 Jan 2006 150405 0700quot RFC339 Returns Fri 03 Mar 2017 141559 0600 Cardinal Numbers and Ordinal Abbreviations Spelledout cardinal numbers eg one two and three and ordinal abbreviations eg 1st 2nd and 3rd are not currently supported To continue with the example above DateFormat quotJan 2nd 2006quot Hugo assumes you want to append nd as a string to the day of the month and outputs the following Mar 3nd 2017 Use Local and UTC In conjunction with the dateFormat function you can also convert your dates to UTC or to local timezones dateFormat quot02 Jan 06 1504 MSTquot DateUTC Returns 03 Mar 17 2015 UTC dateFormat quot02 Jan 06 1504 MSTquot DateLocal Returns 03 Mar 17 1415 CST"},{"href":"/readfiles/index","body":""},{"href":"/readfiles/pages-vs-site-pages","body":" Variable Current context Pages included SitePages any page ALL pages of the site content sections taxonomies etc Superset of everything SiteRegularPages any page Only regular content pages Subset of SitePages Pages List page Regular pages under that list page representing the homepage section taxonomy term tags or taxonomy tagsfoo page Subset of SitePages or SiteRegularPages depending on context Pages Single page empty slice Note In the home context indexhtml Pages is the same as SiteRegularPages"},{"href":"/readfiles/sectionvars","body":"CurrentSection The pages current section The value can be the page itself if it is a section or the homepage FirstSection The pages first section below root eg docs blog etc InSection anotherPage Whether the given page is in the current section Note that this will always return false for pages that are not either regular home or section pages IsAncestor anotherPage Whether the current page is an ancestor of the given page Note that this method is not relevant for taxonomy lists and taxonomy terms pages IsDescendant anotherPage Whether the current page is a descendant of the given page Note that this method is not relevant for taxonomy lists and taxonomy terms pages Parent A sections parent section or a pages section Section The section this content belongs to Note For nested sections this is the first path element in the directory for example blogfunnymypost gt blog Sections The sections below this content"},{"title":"Searching the Docs","href":"/search/_index","body":"Search the documents Begin to search"},{"title":"Enabling Two-Factor Authentication","href":"/security/2FA","body":" "},{"title":"Security","href":"/security/_index","body":"Implement security measures and monitor them "},{"title":"Troubleshooting","href":"/troubleshooting/_index","body":" note The Troubleshooting section includes known issues recent workarounds and FAQs pulled from the Lightelligence Forum note "},{"title":"Frequently Asked Questions","href":"/troubleshooting/faq","body":" note Note The answerssolutions presented below are short and may not be note be enough to solve your problem Visit the Lightelligence Forum and use the search It that does not help start a new topic and ask your questions note Issue 1"},{"title":"Known Issues","href":"/troubleshooting/known-issues","body":"Issue 1 Issue 2 "},{"href":"/users/_index","body":" title Mapping the OLT Landscape linktitle Mapping the OLT Landscape description Plan your OLT journey Create tenants users and custom application roles according to your needs date 20190501 publishdate 20190501 lastmod 20190501 categories users keywords tenantsusersroles menu docs parent users weight 2 weight 0002 rem draft false aliases overviewintroduction toc false Map your IoT system landscape In the Getting Started step of your OLT user journey you got a technical understanding of the vehicles that can get you to your destination Now define your goals map your destinations and choose the people to accompany you on your OLT journey"},{"title":"Defining Custom Roles","href":"/users/creating-custom-roles","body":"Custom Roles and Permissions for Applications By default the OLT platform checks whether a user has the read or write OLT permission to access a specific endpoint With custom applications you access the OLT API endpoints With custom roles you can assign custom permissions to control on a more granular level what a user is allowed to do with a custom application So a part of designing custom applications is to determine whether you wish to define custom roles If you decide to implement a custom role concept and to develop custom applications that implement custom permissions follow the instructions under Defining Custom Permissions and Roles"},{"href":"/users/creating-tenants","body":" title Creating Tenants linktitle Creating Tenants description Create one or multiple tenants depending on your organizational structure or monitoring needs date 20190601 publishdate 20190601 categories userstenants keywords tenantusers menu docs parent users weight 10 weight 10 sectionsweight 10 draft false aliases usersoverviewquickstart toc true Whats a Tenant A tenant is the owner of a system landscape As a tenant assign users and roles to manage the system landscape composed of IoT devices Use Cases Create multiple tenants in one of the following cases for example Your organization manages system landscapes for various customers Separate tenants help you facilitate the billing process You manage system landscapes at different sites Separate tenants can help you to keep the overview of complex system landscapes and monitor devices more efficiently Alternatively you can tag the devices according to their site For reporting reasons you want to assign tenants to cost centers Creating A Tenant Procedure Go to the OLT portal under httpsportallightelligenceio Choose Register and enter data as required In the email you receive activate your account On the Welcome page choose Create Tenant Choose the appropriate plan according to your organizational needs and enter data as required Tenant Name Indicate the location to be connected to the OLT plarform Northern plant for example VAT Registration Number Contact Person lt figure srcimagesuserscreatetenantpng captionCreating a Tenant altCreating a Tenant gt The tenant is created lt figure srcimagesuserscreatetenantresultpng captionCreating a Tenant Result altCreating a Tenant Result gt Choose Login with new tenant Result Your tenant is displayed You can select it lt figure srcimagesusersselecttenantpng captionSelecting a Tenant altSelecting a Tenant gt Via the OLT portal you have access to the OLT platform A user with owner role is created by default Next Steps Create users and assign the required roles to them Managing Users"},{"href":"/users/managing-users","body":" title Managing Users linktitle Managing Users description Create users and assign the roles required Define who is authorized to perform which activities in a tenant date 20190601 publishdate 20190601 categories usersroles keywords rolesusers menu docs parent users weight 20 weight 20 sectionsweight 20 draft false aliases usersoverviewquickstart toc true Understanding the Role Concept When creating a tenant a default user is created whose role is owner The owner owns the tenant and has no restrictions in the OLT portal Owners can assign the following roles to users A writer is not authorized to manage the tenant data Writers can for example develop applications manage the solution by defining device types or creating devices A reader is not authorized to manage the solution Readers can read data for example As the owner you have for example the following options Create additional owners to manage the tenant To do so invite a user and assign the owner role Invite users and assign roles Assign users to a tenant List the tenants assigned to a user The owner role implies the writer role permissions The writer role implies the reader role permissions Note Restricted owner permissions in custom applications For security reasons unrestricted access as an owner is only possible in the OLT portal If you develop custom applications you cant access endpoints related to user management even if your user has the owner role For more information see Developing Custom Applications Inviting Users As the tenant owner create new users by inviting them to the tenant Prerequisites To be able to accept your invitation users must have created an account in the portal Procedure If the user is new to the OLT platform ask the user to create an account to be able to accept the invitation To do so ask the user to go to httpsportallightelligenceio and choose Register In the OLT portal choose Users Choose Invite User Enter data as required To confirm choose Invite to tenant Result The invited user appears on the Pending tab The user receives an invitation email with a link directing to the OLT portal On logging on to the portal the user is asked to accept the invitation Assigning or Changing Roles As a user with the owner role assign roles to users or change the roles Procedure As a user with owner authorization log on to the OLT portal To edit the roles click the user You go to the Edit User window Select the required roles and confirm "},{"title":"Roadmap","href":"/users/roadmap","body":" todo tbd gt tbd Outline the process to connect an IoT system landscape to the OLT platform With regard to roles todo TBD"},{"title":"Lightelligence 0.1","href":"/news/0.1-relnotes/index","body":"This is our initial version"}]